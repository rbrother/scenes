//  Moray V3.5 For Windows Copyright (c) 1993-2003 Lutz + Kretzschmar
//

//
// ********  MATERIALS  *******
//

#include "drumkit.inc"


//
// ********  REFERENCED OBJECTS  *******
//

#include "C:\github\scenes\Waltari2019\drums\bock.inc"

#declare BockBD_Ref = object {
  Bock
  photons {
    collect off
  }
  scale <1.28, 1.08, 1.08>
}
#include "C:\github\scenes\Waltari2019\drums\schraube.inc"

#declare SchraubeBD_Ref = object {
  Schraube
  photons {
    collect off
  }
}
#include "C:\github\scenes\Waltari2019\drums\kralle.inc"

#declare KralleBD_Ref = object {
  KRALLE
  photons {
    collect off
  }
}
#include "C:\github\scenes\Waltari2019\drums\blech.inc"

#declare BlechBD_Ref = object {
  BLECH
  photons {
    collect off
  }
  translate  <-0.385974, 0.0, -0.106446>
}
#declare SpannElementBD1 = union {
  object { BockBD_Ref }
  object { SchraubeBD_Ref }
  object { KralleBD_Ref }
  object { BlechBD_Ref }
  photons {
    collect off
  }
  scale 0.7
  translate  <10.672368, 0.0, 16.88598>
}
#declare Bock1BD_Ref = object {
  Bock
  photons {
    collect off
  }
  scale <1.28, 1.08, 1.08>
}
#declare Schraube1BD_Ref = object {
  Schraube
  photons {
    collect off
  }
}
#declare Kralle1BD_Ref = object {
  KRALLE
  photons {
    collect off
  }
  rotate -0.0*x
}
#declare Blech1BD_Ref = object {
  BLECH
  photons {
    collect off
  }
  rotate 180.0*x
  translate  <-0.387944, -0.0, -3.203005>
}
#declare SpannElement11 = union {
  object { Bock1BD_Ref }
  object { Schraube1BD_Ref }
  object { Kralle1BD_Ref }
  object { Blech1BD_Ref }
  photons {
    collect off
  }
  scale 0.7
  rotate 180.0*x
  translate  <10.6723, 0.0, 1.08>
}
#declare Blech_HT_Ref = object {
  BLECH  photons {
    collect off
  }
  scale 0.6
  translate  <6.49, 0.0, 11.4>
}
#declare Bock_HT_Ref = object {
  Bock  photons {
    collect off
  }
  scale 0.6
  translate  <6.45, 0.0, 11.4>
}
#include "C:\github\scenes\Waltari2019\drums\screw.inc"

#declare Screw_Ref = object {
  screw  photons {
    collect off
  }
  translate  <6.449105, 0.0, 12.000723>
}
#include "C:\github\scenes\Waltari2019\drums\nase.inc"

#declare NaseHT_Ref = object {
  N0__GLOBAL_  photons {
    collect off
  }
  scale <1.0, 1.0, 0.865>
  translate  <-0.006962, 0.0, 11.774946>
}
#declare Blech_HT8_Ref = object {
  BLECH  photons {
    collect off
  }
  scale 0.6
  translate  <6.49, 0.0, 11.4>
}
#declare Bock_HT8_Ref = object {
  Bock  photons {
    collect off
  }
  scale 0.6
  translate  <6.45, 0.0, 11.4>
}
#declare Screw1_Ref = object {
  screw  photons {
    collect off
  }
  translate  <6.449105, 0.0, 12.000723>
}
#declare NaseHT8_Ref = object {
  N0__GLOBAL_  photons {
    collect off
  }
  scale <1.0, 1.0, 0.865>
  translate  <-0.006962, 0.0, 11.774946>
}
#declare Blech_FT_Ref = object {
  BLECH  photons {
    collect off
  }
  scale 0.6
  translate  <8.49, 0.0, 15.4>
}
#declare Bock_HT16_Ref = object {
  Bock  photons {
    collect off
  }
  scale 0.6
  translate  <8.45, 0.0, 15.438314>
}
#declare Screw2_Ref = object {
  screw  photons {
    collect off
  }
  translate  <8.4491, 0.0, 16.019877>
}
#declare NaseFT_Ref = object {
  N0__GLOBAL_  photons {
    collect off
  }
  scale <1.0, 1.0, 0.867>
  translate  <2.01, 0.0, 15.773>
}
#declare CSG14 = union {
  cylinder { // Cylndr10
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube6
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr11
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG006 = union {
  cylinder { // Cylndr12
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  box { // Cube11
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -9.1*z
  translate  2.0*y
}
#declare CSG15 = union {
  cylinder { // Cylndr13
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  10.82*y
  }
  box { // Cube12
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 9.82, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.316, 12.795, 0.0>
}
#declare CSG16 = union {
  cylinder { // Cylndr14
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube13
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr15
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG17 = union {
  box { // Cube14
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -9.1*z
  translate  2.0*y
}
#declare CSG008 = union {
  object { CSG16 }
  object { CSG17 }
  photons {
    collect off
  }
  rotate 180.0*x
  translate  <0.0, 27.59, 0.6>
}
#declare CSG007 = union {
  object { CSG14 }
  object { CSG006 }
  object { CSG15 }
  object { CSG008 }
  photons {
    collect off
  }
  translate  <0.08, 0.0, -0.3>
}
#declare CSG18 = union {
  cylinder { // Cylndr16
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube15
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr17
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG19 = union {
  cylinder { // Cylndr18
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  box { // Cube16
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -9.1*z
  translate  2.0*y
}
#declare CSG20 = union {
  cylinder { // Cylndr19
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  10.82*y
  }
  box { // Cube17
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 9.82, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.316, 12.795, 0.0>
}
#declare CSG21 = union {
  cylinder { // Cylndr20
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube18
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr21
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG22 = union {
  box { // Cube19
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -9.1*z
  translate  2.0*y
}
#declare CSG23 = union {
  object { CSG21 }
  object { CSG22 }
  photons {
    collect off
  }
  rotate 180.0*x
  translate  <0.0, 27.59, 0.6>
}
#declare CSG24 = union {
  object { CSG18 }
  object { CSG19 }
  object { CSG20 }
  object { CSG23 }
  photons {
    collect off
  }
  rotate <180.0, 0.0, 180.0>
  translate  <-0.08, 0.0, 0.3>
}
#declare CSG009 = union {
  object { CSG007 }
  object { CSG24 }
  photons {
    collect off
  }
  rotate -55.0*x
  translate  <0.0, 1.03, 18.3>
}
#declare CSG32 = union {
  cylinder { // Cylndr28
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube25
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr29
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG33 = union {
  cylinder { // Cylndr30
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  box { // Cube26
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -4.06*z
  translate  2.0*y
}
#declare CSG010 = union {
  box { // Cube27
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 4.3, 0.3>
    rotate -0.0*y
    translate  <-0.221894, 9.324941, 0.3>
  }
  cylinder { // Cylndr32
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <-0.302235, 13.624685, 0.3>
  }
  photons {
    collect off
  }
  rotate <-180.0, -0.0, -180.0>
  translate  <-0.08, -1.03, 0.6>
}
#declare CSG38 = union {
  object { CSG32 }
  object { CSG33 }
  object { CSG010 }
  photons {
    collect off
  }
  rotate <180.0, 0.0, 180.0>
  translate  <-0.08, 0.0, 0.3>
}
#declare CSG34 = union {
  cylinder { // Cylndr31
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube28
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  cylinder { // Cylndr33
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  photons {
    collect off
  }
}
#declare CSG35 = union {
  cylinder { // Cylndr34
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  2.0*y
  }
  box { // Cube29
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <0.0, 1.0, 0.3>
  }
  photons {
    collect off
  }
  rotate -4.06*z
  translate  2.0*y
}
#declare CSG25 = union {
  box { // Cube30
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 4.3, 0.3>
    rotate -0.0*y
    translate  <-0.221894, 9.324941, 0.3>
  }
  cylinder { // Cylndr35
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <-0.302235, 13.624685, 0.3>
  }
  photons {
    collect off
  }
  rotate <-180.0, -0.0, -180.0>
  translate  <-0.08, -1.03, 0.6>
}
#declare CSG40 = union {
  object { CSG34 }
  object { CSG35 }
  object { CSG25 }
  photons {
    collect off
  }
  translate  <0.08, 0.0, -0.3>
}
#declare CSG39 = union {
  object { CSG38 }
  object { CSG40 }
  photons {
    collect off
  }
  translate  <0.0, 1.03, 0.3>
}
#declare CSG011 = union {
  object { CSG009 }
  object { CSG39 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp9 = lathe {
  linear_spline
  23  // control points
  <0.000019, -0.953134>,
  <0.134835, -0.953189>,
  <0.157684, -0.902818>,
  <0.214398, -0.895865>,
  <0.240609, -0.849181>,
  <0.296392, -0.842847>,
  <0.319915, -0.794127>,
  <0.374077, -0.790005>,
  <0.39792, -0.742136>,
  <0.452204, -0.739944>,
  <0.475782, -0.693106>,
  <0.530019, -0.6893>,
  <0.544633, -0.642672>,
  <0.594049, -0.635826>,
  <0.611261, -0.589712>,
  <0.663579, -0.581987>,
  <0.685446, -0.539124>,
  <0.484742, 0.930035>,
  <0.473941, 0.956343>,
  <0.454215, 0.981157>,
  <0.42602, 0.999908>,
  <0.385349, 1.007429>,
  <-0.001565, 1.007825>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  rotate 35.0*x
  translate  <0.0, 16.82, -4.25>
}
#declare CSG2 = union {
  cylinder { // Cylndr004
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube001
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr003
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus3
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.25, 0.03, 0.0>
}
#declare CSG5 = union {
  cylinder { // Cylndr5
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube2
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr4
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus001
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.25, 0.03, 0.0>
}
#declare CSG90 = union {
  cylinder { // Cylndr87
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
  }
  box { // Cube47
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  <-0.08, 0.5, 0.0>
  }
  cylinder { // Cylndr88
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  photons {
    collect off
  }
}
#declare CSG91 = union {
  cylinder { // Cylndr89
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  box { // Cube48
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  photons {
    collect off
  }
  rotate -21.700001*z
  translate  1.0*y
}
#declare CSG92 = union {
  box { // Cube50
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 10.3, 0.3>
    rotate -0.0*y
    translate  <0.45, 13.26, 0.0>
  }
  cylinder { // Cylndr90
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <0.37, 23.56, 0.0>
  }
  photons {
    collect off
  }
  translate  <-0.08, -1.03, 0.0>
}
#declare CSG93 = union {
  object { CSG90 }
  object { CSG91 }
  object { CSG92 }
  photons {
    collect off
  }
  rotate -74.150002*x
  translate  <0.0, 1.032, 12.9>
}
#declare CSG94 = union {
  cylinder { // Cylndr91
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  0.08*x
  }
  box { // Cube51
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  cylinder { // Cylndr92
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  photons {
    collect off
  }
}
#declare CSG95 = union {
  cylinder { // Cylndr93
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  box { // Cube52
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  photons {
    collect off
  }
  rotate -12.0*z
  translate  1.0*y
}
#declare CSG96 = union {
  box { // Cube53
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.8, 0.3>
    rotate -0.0*y
    translate  <0.207, 2.777, 0.0>
  }
  cylinder { // Cylndr94
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <0.127, 3.579, 0.0>
  }
  photons {
    collect off
  }
  rotate -0.0*y
}
#declare CSG97 = union {
  object { CSG94 }
  object { CSG95 }
  object { CSG96 }
  photons {
    collect off
  }
  translate  <0.0, 1.032, 0.3>
}
#declare CSG98 = union {
  object { CSG93 }
  object { CSG97 }
  torus { // Torus11
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.13, 4.609646, 0.305299>
  }
  torus { // Torus12
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.45, 4.61, 0.3>
  }
  photons {
    collect off
  }
}
#declare CSG99 = union {
  object { CSG98 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp19 = lathe {
  linear_spline
  23  // control points
  <0.000019, -0.953134>,
  <0.134835, -0.953189>,
  <0.157684, -0.902818>,
  <0.214398, -0.895865>,
  <0.240609, -0.849181>,
  <0.296392, -0.842847>,
  <0.319915, -0.794127>,
  <0.374077, -0.790005>,
  <0.39792, -0.742136>,
  <0.452204, -0.739944>,
  <0.475782, -0.693106>,
  <0.530019, -0.6893>,
  <0.544633, -0.642672>,
  <0.594049, -0.635826>,
  <0.611261, -0.589712>,
  <0.663579, -0.581987>,
  <0.685446, -0.539124>,
  <0.484742, 0.930035>,
  <0.473941, 0.956343>,
  <0.454215, 0.981157>,
  <0.42602, 0.999908>,
  <0.385349, 1.007429>,
  <-0.001565, 1.007825>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  rotate 15.0*x
  translate  <0.37, 7.08, -8.7>
}
#declare Cube54 = object {
  box { // Cube54
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}
#declare CSG103 = union {
  cylinder { // Cylndr98
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube57
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr99
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus6
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.05, 0.0>
}
#declare CSG106 = union {
  cylinder { // Cylndr100
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube58
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr101
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus7
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.05, 0.0>
}
#declare Cube59 = object {
  box { // Cube59
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}
#declare NaseL3 = union {
  cylinder { // Abrd4
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.1>
    rotate -90.0*y
    translate  <-0.09, 0.68, 0.0>
  }
  box { // CubeHint3
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.05, 0.18, 0.3>
    translate  <-0.14, 0.5, 0.0>
  }
  torus { // Torus18
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.19, 0.68, 0.0>
  }
  photons {
    collect off
  }
}
#declare NaseR3 = union {
  cylinder { // Abrd5
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.1>
    rotate -90.0*y
    translate  <0.19, 0.68, 0.0>
  }
  box { // CubeHint4
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.05, 0.18, 0.3>
    translate  <0.14, 0.5, 0.0>
  }
  torus { // Torus19
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.19, 0.69, 0.0>
  }
  photons {
    collect off
  }
}
#declare BezPtch1 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.080131, -1.000039, 0.300009>, <-0.053490, -1.000039, 0.300009>, <-0.026850, -1.000039, 0.300009>, <-0.000210, -1.000039, 0.300009>, 
      <-0.156964, -0.833366, 0.267934>, <-0.131281, -0.833366, 0.275012>, <-0.105598, -0.833366, 0.282091>, <-0.079916, -0.833366, 0.289169>, 
      <-0.199189, -0.666693, 0.238222>, <-0.175034, -0.666693, 0.249458>, <-0.150879, -0.666693, 0.260694>, <-0.126725, -0.666693, 0.271930>, 
      <-0.218009, -0.500019, 0.214821>, <-0.195247, -0.500019, 0.228394>, <-0.172486, -0.500019, 0.241966>, <-0.149724, -0.500019, 0.255539>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.218009, -0.500019, 0.214821>, <-0.195247, -0.500019, 0.228394>, <-0.172486, -0.500019, 0.241966>, <-0.149724, -0.500019, 0.255539>, 
      <-0.236828, -0.333346, 0.191420>, <-0.215460, -0.333346, 0.207329>, <-0.194092, -0.333346, 0.223238>, <-0.172724, -0.333346, 0.239147>, 
      <-0.257549, -0.166673, 0.173478>, <-0.237469, -0.166673, 0.190984>, <-0.217388, -0.166673, 0.208491>, <-0.197308, -0.166673, 0.225997>, 
      <-0.273211, 0.000000, 0.143701>, <-0.255252, 0.000000, 0.163165>, <-0.237292, 0.000000, 0.182629>, <-0.219333, 0.000000, 0.202093>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.273211, 0.000000, 0.143701>, <-0.255252, 0.000000, 0.163165>, <-0.237292, 0.000000, 0.182629>, <-0.219333, 0.000000, 0.202093>, 
      <-0.288872, 0.166673, 0.113925>, <-0.273034, 0.166673, 0.135346>, <-0.257197, 0.166673, 0.156767>, <-0.241359, 0.166673, 0.178189>, 
      <-0.297465, 0.329710, 0.084366>, <-0.284435, 0.327791, 0.107523>, <-0.271405, 0.325871, 0.130680>, <-0.258376, 0.323952, 0.153837>, 
      <-0.303944, 0.498201, 0.046158>, <-0.293664, 0.497242, 0.070514>, <-0.283383, 0.496282, 0.094869>, <-0.273103, 0.495322, 0.119224>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.303944, 0.498201, 0.046158>, <-0.293664, 0.497242, 0.070514>, <-0.283383, 0.496282, 0.094869>, <-0.273103, 0.495322, 0.119224>, 
      <-0.310424, 0.666693, 0.007951>, <-0.302893, 0.666693, 0.033504>, <-0.295361, 0.666693, 0.059058>, <-0.287830, 0.666693, 0.084612>, 
      <-0.308077, 0.833366, -0.038921>, <-0.304482, 0.833366, -0.012524>, <-0.300888, 0.833366, 0.013873>, <-0.297294, 0.833366, 0.040269>, 
      <-0.300199, 1.000039, -0.079415>, <-0.300135, 1.000039, -0.052774>, <-0.300072, 1.000039, -0.026134>, <-0.300008, 1.000039, 0.000506>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.000210, -1.000039, 0.300009>, <0.026430, -1.000039, 0.300009>, <0.053070, -1.000039, 0.300009>, <0.079711, -1.000039, 0.300009>, 
      <-0.079916, -0.833366, 0.289169>, <-0.054233, -0.833366, 0.296247>, <-0.028550, -0.833366, 0.303326>, <-0.002868, -0.833366, 0.310404>, 
      <-0.126725, -0.666693, 0.271930>, <-0.102570, -0.666693, 0.283166>, <-0.078415, -0.666693, 0.294402>, <-0.054260, -0.666693, 0.305638>, 
      <-0.149724, -0.500019, 0.255539>, <-0.126963, -0.500019, 0.269112>, <-0.104201, -0.500019, 0.282684>, <-0.081440, -0.500019, 0.296257>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.149724, -0.500019, 0.255539>, <-0.126963, -0.500019, 0.269112>, <-0.104201, -0.500019, 0.282684>, <-0.081440, -0.500019, 0.296257>, 
      <-0.172724, -0.333346, 0.239147>, <-0.151356, -0.333346, 0.255057>, <-0.129988, -0.333346, 0.270966>, <-0.108620, -0.333346, 0.286875>, 
      <-0.197308, -0.166673, 0.225997>, <-0.177227, -0.166673, 0.243504>, <-0.157147, -0.166673, 0.261011>, <-0.137067, -0.166673, 0.278517>, 
      <-0.219333, 0.000000, 0.202093>, <-0.201374, 0.000000, 0.221557>, <-0.183415, 0.000000, 0.241021>, <-0.165456, 0.000000, 0.260485>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.219333, 0.000000, 0.202093>, <-0.201374, 0.000000, 0.221557>, <-0.183415, 0.000000, 0.241021>, <-0.165456, 0.000000, 0.260485>, 
      <-0.241359, 0.166673, 0.178189>, <-0.225521, 0.166673, 0.199610>, <-0.209683, 0.166673, 0.221031>, <-0.193845, 0.166673, 0.242452>, 
      <-0.258376, 0.323952, 0.153837>, <-0.245346, 0.322033, 0.176994>, <-0.232316, 0.320114, 0.200151>, <-0.219287, 0.318195, 0.223308>, 
      <-0.273103, 0.495322, 0.119224>, <-0.262822, 0.494363, 0.143579>, <-0.252542, 0.493403, 0.167935>, <-0.242261, 0.492444, 0.192290>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.273103, 0.495322, 0.119224>, <-0.262822, 0.494363, 0.143579>, <-0.252542, 0.493403, 0.167935>, <-0.242261, 0.492444, 0.192290>, 
      <-0.287830, 0.666693, 0.084612>, <-0.280299, 0.666693, 0.110165>, <-0.272768, 0.666693, 0.135719>, <-0.265236, 0.666693, 0.161272>, 
      <-0.297294, 0.833366, 0.040269>, <-0.293699, 0.833366, 0.066666>, <-0.290105, 0.833366, 0.093063>, <-0.286511, 0.833366, 0.119459>, 
      <-0.300008, 1.000039, 0.000506>, <-0.299945, 1.000039, 0.027146>, <-0.299881, 1.000039, 0.053786>, <-0.299818, 1.000039, 0.080426>
    }
  }
  photons {
    collect off
  }
  translate  3.0*y
}
#declare BezPtch2 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.079921, -1.000039, -0.299821>, <-0.053280, -1.000039, -0.299821>, <-0.026640, -1.000039, -0.299821>, <-0.000000, -1.000039, -0.299821>, 
      <-0.000776, -0.833366, -0.310289>, <0.024982, -0.833366, -0.303492>, <0.050741, -0.833366, -0.296694>, <0.076499, -0.833366, -0.289897>, 
      <0.062675, -0.666693, -0.303894>, <0.086500, -0.666693, -0.291974>, <0.110324, -0.666693, -0.280055>, <0.134149, -0.666693, -0.268135>, 
      <0.095780, -0.500019, -0.293075>, <0.117975, -0.500019, -0.278648>, <0.140170, -0.500019, -0.264222>, <0.162365, -0.500019, -0.249795>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.095780, -0.500019, -0.293075>, <0.117975, -0.500019, -0.278648>, <0.140170, -0.500019, -0.264222>, <0.162365, -0.500019, -0.249795>, 
      <0.128884, -0.333346, -0.282256>, <0.149450, -0.333346, -0.265322>, <0.170016, -0.333346, -0.248388>, <0.190581, -0.333346, -0.231455>, 
      <0.127224, -0.166673, -0.283009>, <0.147888, -0.166673, -0.266196>, <0.168553, -0.166673, -0.249383>, <0.189218, -0.166673, -0.232570>, 
      <0.153475, 0.000000, -0.267974>, <0.172312, 0.000000, -0.249316>, <0.191149, 0.000000, -0.230658>, <0.210158, 0.000000, -0.211792>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.153475, 0.000000, -0.267974>, <0.172312, 0.000000, -0.249316>, <0.191149, 0.000000, -0.230658>, <0.210158, 0.000000, -0.211792>, 
      <0.179727, 0.166673, -0.252939>, <0.196736, 0.166673, -0.232435>, <0.213745, 0.166673, -0.211932>, <0.230754, 0.166673, -0.191428>, 
      <0.194656, 0.333346, -0.241638>, <0.210397, 0.333346, -0.220146>, <0.226139, 0.333346, -0.198654>, <0.241880, 0.333346, -0.177162>, 
      <0.213078, 0.500019, -0.224124>, <0.226959, 0.500019, -0.201491>, <0.240840, 0.500019, -0.178858>, <0.254721, 0.500019, -0.156225>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.213078, 0.500019, -0.224124>, <0.226959, 0.500019, -0.201491>, <0.240840, 0.500019, -0.178858>, <0.254721, 0.500019, -0.156225>, 
      <0.231500, 0.666693, -0.206609>, <0.243521, 0.666693, -0.182835>, <0.255542, 0.666693, -0.159061>, <0.267563, 0.666693, -0.135287>, 
      <0.270131, 0.833366, -0.152673>, <0.276823, 0.833366, -0.126887>, <0.283515, 0.833366, -0.101101>, <0.290207, 0.833366, -0.075315>, 
      <0.299859, 1.000039, -0.079748>, <0.299846, 1.000039, -0.053107>, <0.299833, 1.000039, -0.026467>, <0.299821, 1.000039, 0.000173>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.000000, -1.000039, -0.299821>, <0.026640, -1.000039, -0.299821>, <0.053280, -1.000039, -0.299821>, <0.079921, -1.000039, -0.299821>, 
      <0.076499, -0.833366, -0.289897>, <0.102258, -0.833366, -0.283100>, <0.128016, -0.833366, -0.276303>, <0.153775, -0.833366, -0.269505>, 
      <0.134149, -0.666693, -0.268135>, <0.157974, -0.666693, -0.256215>, <0.181799, -0.666693, -0.244296>, <0.205624, -0.666693, -0.232376>, 
      <0.162365, -0.500019, -0.249795>, <0.184561, -0.500019, -0.235368>, <0.206756, -0.500019, -0.220941>, <0.228951, -0.500019, -0.206514>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.162365, -0.500019, -0.249795>, <0.184561, -0.500019, -0.235368>, <0.206756, -0.500019, -0.220941>, <0.228951, -0.500019, -0.206514>, 
      <0.190581, -0.333346, -0.231455>, <0.211147, -0.333346, -0.214521>, <0.231713, -0.333346, -0.197587>, <0.252278, -0.333346, -0.180653>, 
      <0.189218, -0.166673, -0.232570>, <0.209883, -0.166673, -0.215758>, <0.230548, -0.166673, -0.198945>, <0.251212, -0.166673, -0.182132>, 
      <0.210158, 0.000000, -0.211792>, <0.228823, 0.000000, -0.193341>, <0.247660, 0.000000, -0.174683>, <0.266497, 0.000000, -0.156025>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.210158, 0.000000, -0.211792>, <0.228823, 0.000000, -0.193341>, <0.247660, 0.000000, -0.174683>, <0.266497, 0.000000, -0.156025>, 
      <0.230754, 0.166673, -0.191428>, <0.247764, 0.166673, -0.170925>, <0.264773, 0.166673, -0.150422>, <0.281782, 0.166673, -0.129918>, 
      <0.241880, 0.333346, -0.177162>, <0.257622, 0.333346, -0.155670>, <0.273363, 0.333346, -0.134178>, <0.289105, 0.333346, -0.112686>, 
      <0.254721, 0.500019, -0.156225>, <0.268603, 0.500019, -0.133592>, <0.282484, 0.500019, -0.110959>, <0.296365, 0.500019, -0.088326>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.254721, 0.500019, -0.156225>, <0.268603, 0.500019, -0.133592>, <0.282484, 0.500019, -0.110959>, <0.296365, 0.500019, -0.088326>, 
      <0.267563, 0.666693, -0.135287>, <0.279583, 0.666693, -0.111513>, <0.291604, 0.666693, -0.087739>, <0.303625, 0.666693, -0.063965>, 
      <0.290207, 0.833366, -0.075315>, <0.296899, 0.833366, -0.049529>, <0.303591, 0.833366, -0.023743>, <0.310283, 0.833366, 0.002043>, 
      <0.299821, 1.000039, 0.000173>, <0.299808, 1.000039, 0.026813>, <0.299795, 1.000039, 0.053454>, <0.299783, 1.000039, 0.080094>
    }
  }
  photons {
    collect off
  }
  translate  3.0*y
}
#declare BezPtch3 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.300000, -1.000000, 0.080000>, <-0.200000, -1.000000, 0.080000>, <-0.100000, -1.000000, 0.080000>, <0.000000, -1.000000, 0.080000>, 
      <-0.309810, -0.840000, 0.020441>, <-0.211700, -0.840000, 0.039790>, <-0.113589, -0.840000, 0.059139>, <-0.015479, -0.840000, 0.078488>, 
      <-0.308404, -0.660000, -0.035878>, <-0.215405, -0.660000, 0.000881>, <-0.122406, -0.660000, 0.037640>, <-0.029407, -0.660000, 0.074399>, 
      <-0.303165, -0.500000, -0.061643>, <-0.213934, -0.500000, -0.017300>, <-0.124704, -0.500000, 0.027042>, <-0.035474, -0.500000, 0.071384>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.303165, -0.500000, -0.061643>, <-0.213934, -0.500000, -0.017300>, <-0.124704, -0.500000, 0.027042>, <-0.035474, -0.500000, 0.071384>, 
      <-0.297926, -0.340000, -0.087408>, <-0.212464, -0.340000, -0.035482>, <-0.127002, -0.340000, 0.016444>, <-0.041541, -0.340000, 0.068369>, 
      <-0.279800, -0.160000, -0.134581>, <-0.203894, -0.160000, -0.069479>, <-0.127988, -0.160000, -0.004377>, <-0.052082, -0.160000, 0.060725>, 
      <-0.262501, 0.000000, -0.162522>, <-0.194297, 0.000000, -0.090161>, <-0.126093, 0.000000, -0.017799>, <-0.057889, 0.000000, 0.054563>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.262501, 0.000000, -0.162522>, <-0.194297, 0.000000, -0.090161>, <-0.126093, 0.000000, -0.017799>, <-0.057889, 0.000000, 0.054563>, 
      <-0.245201, 0.160000, -0.190463>, <-0.184700, 0.160000, -0.110842>, <-0.124199, 0.160000, -0.031220>, <-0.063697, 0.160000, 0.048401>, 
      <-0.210540, 0.340000, -0.228194>, <-0.163957, 0.340000, -0.139707>, <-0.117373, 0.340000, -0.051220>, <-0.070790, 0.340000, 0.037267>, 
      <-0.189572, 0.500000, -0.244455>, <-0.150863, 0.500000, -0.152648>, <-0.112155, 0.500000, -0.060841>, <-0.073446, 0.500000, 0.030967>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.189572, 0.500000, -0.244455>, <-0.150863, 0.500000, -0.152648>, <-0.112155, 0.500000, -0.060841>, <-0.073446, 0.500000, 0.030967>, 
      <-0.168603, 0.660000, -0.260716>, <-0.137770, 0.660000, -0.165589>, <-0.106936, 0.660000, -0.070461>, <-0.076102, 0.660000, 0.024667>, 
      <-0.135167, 0.840000, -0.279517>, <-0.116299, 0.840000, -0.181313>, <-0.097431, 0.840000, -0.083110>, <-0.078563, 0.840000, 0.015094>, 
      <-0.080177, 1.000000, -0.299953>, <-0.080118, 1.000000, -0.199953>, <-0.080059, 1.000000, -0.099953>, <-0.080000, 1.000000, 0.000047>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.000000, -1.000000, 0.080000>, <0.100000, -1.000000, 0.080000>, <0.200000, -1.000000, 0.080000>, <0.300000, -1.000000, 0.080000>, 
      <-0.015479, -0.840000, 0.078488>, <0.082631, -0.840000, 0.097837>, <0.180741, -0.840000, 0.117186>, <0.278851, -0.840000, 0.136535>, 
      <-0.029407, -0.660000, 0.074399>, <0.063592, -0.660000, 0.111158>, <0.156590, -0.660000, 0.147917>, <0.249589, -0.660000, 0.184676>, 
      <-0.035474, -0.500000, 0.071384>, <0.053756, -0.500000, 0.115727>, <0.142987, -0.500000, 0.160069>, <0.232217, -0.500000, 0.204411>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.035474, -0.500000, 0.071384>, <0.053756, -0.500000, 0.115727>, <0.142987, -0.500000, 0.160069>, <0.232217, -0.500000, 0.204411>, 
      <-0.041541, -0.340000, 0.068369>, <0.043921, -0.340000, 0.120295>, <0.129383, -0.340000, 0.172221>, <0.214845, -0.340000, 0.224147>, 
      <-0.052082, -0.160000, 0.060725>, <0.023824, -0.160000, 0.125827>, <0.099731, -0.160000, 0.190929>, <0.175637, -0.160000, 0.256031>, 
      <-0.057889, 0.000000, 0.054563>, <0.010314, 0.000000, 0.126925>, <0.078518, 0.000000, 0.199286>, <0.146722, 0.000000, 0.271648>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.057889, 0.000000, 0.054563>, <0.010314, 0.000000, 0.126925>, <0.078518, 0.000000, 0.199286>, <0.146722, 0.000000, 0.271648>, 
      <-0.063697, 0.160000, 0.048401>, <-0.003196, 0.160000, 0.128023>, <0.057306, 0.160000, 0.207644>, <0.117807, 0.160000, 0.287266>, 
      <-0.070790, 0.340000, 0.037267>, <-0.024206, 0.340000, 0.125754>, <0.022377, 0.340000, 0.214241>, <0.068961, 0.340000, 0.302728>, 
      <-0.073446, 0.500000, 0.030967>, <-0.034737, 0.500000, 0.122774>, <0.003971, 0.500000, 0.214582>, <0.042680, 0.500000, 0.306389>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.073446, 0.500000, 0.030967>, <-0.034737, 0.500000, 0.122774>, <0.003971, 0.500000, 0.214582>, <0.042680, 0.500000, 0.306389>, 
      <-0.076102, 0.660000, 0.024667>, <-0.045268, 0.660000, 0.119795>, <-0.014435, 0.660000, 0.214922>, <0.016399, 0.660000, 0.310050>, 
      <-0.078563, 0.840000, 0.015094>, <-0.059695, 0.840000, 0.113298>, <-0.040827, 0.840000, 0.211502>, <-0.021959, 0.840000, 0.309706>, 
      <-0.080000, 1.000000, 0.000047>, <-0.079941, 1.000000, 0.100047>, <-0.079882, 1.000000, 0.200047>, <-0.079823, 1.000000, 0.300047>
    }
  }
  photons {
    collect off
  }
  rotate -90.0*y
  translate  3.0*y
}
#declare BezPtch4 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.300000, -1.000000, -0.080000>, <-0.200000, -1.000000, -0.080000>, <-0.100000, -1.000000, -0.080000>, <0.000000, -1.000000, -0.080000>, 
      <-0.280339, -0.840000, -0.133454>, <-0.182022, -0.840000, -0.115187>, <-0.083704, -0.840000, -0.096921>, <0.014613, -0.840000, -0.078654>, 
      <-0.251840, -0.660000, -0.181595>, <-0.158396, -0.660000, -0.145982>, <-0.064953, -0.660000, -0.110368>, <0.028491, -0.660000, -0.074755>, 
      <-0.228323, -0.500000, -0.207475>, <-0.140050, -0.500000, -0.161856>, <-0.051777, -0.500000, -0.116237>, <0.036495, -0.500000, -0.070618>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.228323, -0.500000, -0.207475>, <-0.140050, -0.500000, -0.161856>, <-0.051777, -0.500000, -0.116237>, <0.036495, -0.500000, -0.070618>, 
      <-0.204806, -0.340000, -0.233355>, <-0.121704, -0.340000, -0.177731>, <-0.038602, -0.340000, -0.122106>, <0.044500, -0.340000, -0.066481>, 
      <-0.164755, -0.160000, -0.263165>, <-0.091643, -0.160000, -0.194940>, <-0.018531, -0.160000, -0.126715>, <0.054580, -0.160000, -0.058489>, 
      <-0.134336, 0.000000, -0.277871>, <-0.069470, 0.000000, -0.202545>, <-0.004605, 0.000000, -0.127219>, <0.060261, 0.000000, -0.051892>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.134336, 0.000000, -0.277871>, <-0.069470, 0.000000, -0.202545>, <-0.004605, 0.000000, -0.127219>, <0.060261, 0.000000, -0.051892>, 
      <-0.103917, 0.160000, -0.292577>, <-0.047297, 0.160000, -0.210150>, <0.009322, 0.160000, -0.127723>, <0.065942, 0.160000, -0.045296>, 
      <-0.067519, 0.340000, -0.303053>, <-0.021358, 0.340000, -0.214345>, <0.024804, 0.340000, -0.125637>, <0.070966, 0.340000, -0.036930>, 
      <-0.040903, 0.500000, -0.306604>, <-0.002729, 0.500000, -0.214582>, <0.035444, 0.500000, -0.122560>, <0.073663, 0.500000, -0.030393>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.040903, 0.500000, -0.306604>, <-0.002729, 0.500000, -0.214582>, <0.035444, 0.500000, -0.122560>, <0.073663, 0.500000, -0.030393>, 
      <-0.014286, 0.660000, -0.310155>, <0.015899, 0.660000, -0.214819>, <0.046083, 0.660000, -0.119484>, <0.076268, 0.660000, -0.024148>, 
      <0.037289, 0.840000, -0.308236>, <0.051264, 0.840000, -0.209218>, <0.065240, 0.840000, -0.110199>, <0.079215, 0.840000, -0.011180>, 
      <0.080067, 1.000000, -0.299982>, <0.080045, 1.000000, -0.199982>, <0.080022, 1.000000, -0.099982>, <0.080000, 1.000000, 0.000018>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.000000, -1.000000, -0.080000>, <0.100000, -1.000000, -0.080000>, <0.200000, -1.000000, -0.080000>, <0.300000, -1.000000, -0.080000>, 
      <0.014613, -0.840000, -0.078654>, <0.112931, -0.840000, -0.060387>, <0.211248, -0.840000, -0.042121>, <0.309566, -0.840000, -0.023854>, 
      <0.028491, -0.660000, -0.074755>, <0.121934, -0.660000, -0.039141>, <0.215378, -0.660000, -0.003528>, <0.308821, -0.660000, 0.032085>, 
      <0.036495, -0.500000, -0.070618>, <0.124768, -0.500000, -0.024999>, <0.213040, -0.500000, 0.020620>, <0.301313, -0.500000, 0.066239>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.036495, -0.500000, -0.070618>, <0.124768, -0.500000, -0.024999>, <0.213040, -0.500000, 0.020620>, <0.301313, -0.500000, 0.066239>, 
      <0.044500, -0.340000, -0.066481>, <0.127601, -0.340000, -0.010857>, <0.210703, -0.340000, 0.044768>, <0.293805, -0.340000, 0.100392>, 
      <0.054580, -0.160000, -0.058489>, <0.127692, -0.160000, 0.009736>, <0.200804, -0.160000, 0.077961>, <0.273915, -0.160000, 0.146186>, 
      <0.060261, 0.000000, -0.051892>, <0.125127, 0.000000, 0.023434>, <0.189992, 0.000000, 0.098760>, <0.254858, 0.000000, 0.174086>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.060261, 0.000000, -0.051892>, <0.125127, 0.000000, 0.023434>, <0.189992, 0.000000, 0.098760>, <0.254858, 0.000000, 0.174086>, 
      <0.065942, 0.160000, -0.045296>, <0.122561, 0.160000, 0.037132>, <0.179181, 0.160000, 0.119559>, <0.235800, 0.160000, 0.201986>, 
      <0.070966, 0.340000, -0.036930>, <0.117128, 0.340000, 0.051778>, <0.163290, 0.340000, 0.140486>, <0.209452, 0.340000, 0.229194>, 
      <0.073663, 0.500000, -0.030393>, <0.111791, 0.500000, 0.061483>, <0.149964, 0.500000, 0.153505>, <0.188138, 0.500000, 0.245526>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.073663, 0.500000, -0.030393>, <0.111791, 0.500000, 0.061483>, <0.149964, 0.500000, 0.153505>, <0.188138, 0.500000, 0.245526>, 
      <0.076268, 0.660000, -0.024148>, <0.106453, 0.660000, 0.071188>, <0.136638, 0.660000, 0.166523>, <0.166823, 0.660000, 0.261859>, 
      <0.079215, 0.840000, -0.011180>, <0.093190, 0.840000, 0.087838>, <0.107165, 0.840000, 0.186857>, <0.121141, 0.840000, 0.285876>, 
      <0.080000, 1.000000, 0.000018>, <0.079978, 1.000000, 0.100018>, <0.079955, 1.000000, 0.200018>, <0.079933, 1.000000, 0.300018>
    }
  }
  photons {
    collect off
  }
  rotate -90.0*y
  translate  3.0*y
}
#declare CSG44 = union {
  box { // Cube22
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  1.0*y
  }
  object { BezPtch1 }
  object { BezPtch2 }
  object { BezPtch3 }
  object { BezPtch4 }
  box { // Cube23
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.3, 1.2, 0.08>
    translate  5.2*y
  }
  cylinder { // Cylndr54
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  0.08*x
  }
  torus { // Torus20
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.7, 0.0>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare CSG45 = union {
  sphere { // Sphere001
    <0,0,0>,1
    photons {
      collect off
    }
    scale <0.4, 0.2, 0.2>
    rotate -55.0*x
    translate  6.7*y
  }
  cylinder { // Cylndr55
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.4, 0.2, 1.0>
    rotate -20.0*x
    translate  6.7*y
  }
  cylinder { // Cylndr56
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.4, 0.2, 2.5>
    rotate -90.0*x
    translate  <0.0, 4.2, 0.0>
  }
  sphere { // Sphere2
    <0,0,0>,1
    photons {
      collect off
    }
    scale <0.4, 0.2, 0.2>
    rotate -20.0*x
    translate  <0.0, 7.041915, 0.940438>
  }
  material {
    Plastic_1
  }
  photons {
    collect off
  }
}
#declare CSG016 = union {
  object { CSG44 }
  object { CSG45 }
  photons {
    collect off
  }
  rotate 5.0*x
  translate  0.7*y
}
#declare CSG012 = union {
  cylinder { // Abrd1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <-0.12, 3.0, 0.0>
  }
  box { // CubeMid
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    translate  <-0.2, 2.0, 0.0>
  }
  cylinder { // Biege2
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <-0.2, 1.0, -0.3>
  }
  box { // CubeSchraeg1
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.268, 0.3>
    rotate 22.0*z
    translate  <-0.1, 0.75, 0.0>
  }
  cylinder { // Biege
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 0.5, -0.3>
  }
  box { // CubeVorn
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  0.25*y
  }
  cylinder { // Abrd
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  0.08*x
  }
  torus { // Torus21
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.28, 3.0, 0.0>
  }
  photons {
    collect off
  }
  rotate 55.0*x
  translate  0.68*y
}
#declare NaseL = union {
  cylinder { // Abrd3
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.1>
    rotate -90.0*y
    translate  <-0.09, 0.68, 0.0>
  }
  box { // CubeHint2
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.05, 0.18, 0.3>
    translate  <-0.14, 0.5, 0.0>
  }
  torus { // Torus22
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.19, 0.68, 0.0>
  }
  photons {
    collect off
  }
}
#declare NaseR = union {
  cylinder { // Abrd2
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.1>
    rotate -90.0*y
    translate  <0.19, 0.68, 0.0>
  }
  box { // CubeHint1
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.05, 0.18, 0.3>
    translate  <0.14, 0.5, 0.0>
  }
  torus { // Torus23
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.19, 0.68, 0.0>
  }
  photons {
    collect off
  }
}
#declare ScrewSD_Ref = object {
  screw  photons {
    collect off
  }
  translate  <7.45, 0.0, 2.8>
}
#declare NaseSD_Ref = object {
  N0__GLOBAL_  photons {
    collect off
  }
  scale <1.0, 1.0, 0.865>
  translate  <1.0, 0.0, 2.565>
}
#declare RingSD = lathe {
  linear_spline
  27  // control points
  <7.033105, -0.021124>,
  <7.052137, -0.032184>,
  <7.222469, -0.032374>,
  <7.245979, -0.042565>,
  <7.256725, -0.060797>,
  <7.277786, -0.234443>,
  <7.305138, -0.235021>,
  <7.283128, -0.059898>,
  <7.276605, -0.041227>,
  <7.261619, -0.025348>,
  <7.247536, -0.016001>,
  <7.227229, -0.010191>,
  <7.069509, -0.009745>,
  <7.057999, -0.002679>,
  <7.051974, 0.011285>,
  <7.052925, 0.409919>,
  <7.144859, 0.425856>,
  <7.149413, 0.428403>,
  <7.151219, 0.433746>,
  <7.14903, 0.447053>,
  <7.145682, 0.451192>,
  <7.140468, 0.452255>,
  <7.041953, 0.435262>,
  <7.028742, 0.43027>,
  <7.022145, 0.417898>,
  <7.022595, -0.003277>,
  <7.031618, -0.020267>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  2.8*z
}
#declare CSG001 = union {
  object { RingSD }
  object { NaseSD_Ref }
  object { // NaseSD1 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { // NaseSD2 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate -72.0*z
    translate  0.0*y
  }
  object { // NaseSD3 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseSD4 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate -144.0*z
    translate  0.0*x
  }
  object { // NaseSD5 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate 180.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // NaseSD6 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate 144.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // NaseSD7 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate 108.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseSD8 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate 72.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseSD9 -> NaseSD
    NaseSD_Ref
    photons {
      collect off
    }
    rotate 36.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare FellRingSD = union {
  object { ScrewSD_Ref }
  object { // ScrewSD1 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { // ScrewSD2 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate -72.0*z
  }
  object { // ScrewSD3 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate -108.0*z
    translate  0.0*x
  }
  object { // ScrewSD4 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate -144.0*z
    translate  -0.0*x
  }
  object { // ScrewSD5 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // ScrewSD6 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate 144.0*z
    translate  -0.0*y
  }
  object { // ScrewSD7 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate 108.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // ScrewSD8 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate 72.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // ScrewSD9 -> ScrewSD
    ScrewSD_Ref
    photons {
      collect off
    }
    rotate 36.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { CSG001 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#include "C:\github\scenes\Waltari2019\drums\sdbock.inc"

#declare Snare_Bock_Ref = object {
  Snare_Bock  photons {
    collect off
  }
  scale 0.6
  translate  7.0*x
}
#declare CSG56 = union {
  cylinder { // Cylndr63
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube31
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  <0.0, 0.5, 0.3>
  }
  cylinder { // Cylndr64
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  1.0*y
  }
  photons {
    collect off
  }
}
#declare CSG57 = union {
  cylinder { // Cylndr65
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  1.0*y
  }
  box { // Cube32
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  <0.0, 0.5, 0.3>
  }
  photons {
    collect off
  }
  rotate -21.700001*z
  translate  1.0*y
}
#declare CSG58 = union {
  box { // Cube33
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 4.3, 0.3>
    rotate -0.0*y
    translate  <-0.45, 7.258, 0.3>
  }
  cylinder { // Cylndr66
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <-0.530546, 11.557887, 0.3>
  }
  photons {
    collect off
  }
  rotate <-180.0, -0.0, -180.0>
  translate  <-0.08, -1.03, 0.6>
}
#declare CSG59 = union {
  object { CSG56 }
  object { CSG57 }
  object { CSG58 }
  photons {
    collect off
  }
  rotate -58.400002*x
  translate  <0.0, -0.257237, 7.847807>
}
#declare CSG60 = union {
  cylinder { // Cylndr67
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  0.08*x
  }
  box { // Cube34
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  cylinder { // Cylndr68
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  photons {
    collect off
  }
}
#declare CSG61 = union {
  cylinder { // Cylndr69
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  box { // Cube35
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  photons {
    collect off
  }
  rotate -12.0*z
  translate  1.0*y
}
#declare CSG62 = union {
  box { // Cube36
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    rotate -0.0*y
    translate  <0.207, 2.977, 0.0>
  }
  cylinder { // Cylndr70
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <0.128, 4.0, 0.0>
  }
  photons {
    collect off
  }
  rotate -0.0*y
}
#declare CSG63 = union {
  object { CSG60 }
  object { CSG61 }
  object { CSG62 }
  photons {
    collect off
  }
  rotate 30.0*x
  translate  0.3*z
}
#declare CSG64 = union {
  object { CSG59 }
  object { CSG63 }
  torus { // Torus24
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.13, 3.447897, 2.3>
  }
  torus { // Torus25
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.45, 3.447897, 2.3>
  }
  photons {
    collect off
  }
  translate  1.032103*y
}
#declare CSG65 = union {
  object { CSG64 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp13 = lathe {
  linear_spline
  23  // control points
  <0.000019, -0.953134>,
  <0.134835, -0.953189>,
  <0.157684, -0.902818>,
  <0.214398, -0.895865>,
  <0.240609, -0.849181>,
  <0.296392, -0.842847>,
  <0.319915, -0.794127>,
  <0.374077, -0.790005>,
  <0.39792, -0.742136>,
  <0.452204, -0.739944>,
  <0.475782, -0.693106>,
  <0.530019, -0.6893>,
  <0.544633, -0.642672>,
  <0.594049, -0.635826>,
  <0.611261, -0.589712>,
  <0.663579, -0.581987>,
  <0.685446, -0.539124>,
  <0.484742, 0.930035>,
  <0.473941, 0.956343>,
  <0.454215, 0.981157>,
  <0.42602, 0.999908>,
  <0.385349, 1.007429>,
  <-0.001565, 1.007825>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  rotate 32.5*x
  translate  <0.37, 6.32, -0.6>
}
#declare Cube24 = object {
  box { // Cube24
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}
#declare CSG69 = union {
  cylinder { // Cylndr74
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube37
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr75
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus26
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.033, 0.0>
}
#declare CSG72 = union {
  cylinder { // Cylndr76
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube38
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr77
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus27
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.033, 0.0>
}
#declare Cube39 = object {
  box { // Cube39
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}
#declare CSG148 = union {
  cylinder { // Cylndr159
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 0.0, 0.3>
  }
  box { // Cube140
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  <0.0, 0.5, 0.3>
  }
  cylinder { // Cylndr160
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  1.0*y
  }
  photons {
    collect off
  }
}
#declare CSG149 = union {
  cylinder { // Cylndr161
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  1.0*y
  }
  box { // Cube141
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  <0.0, 0.5, 0.3>
  }
  photons {
    collect off
  }
  rotate -21.700001*z
  translate  1.0*y
}
#declare CSG150 = union {
  box { // Cube142
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 4.3, 0.3>
    rotate -0.0*y
    translate  <-0.45, 7.258, 0.3>
  }
  cylinder { // Cylndr162
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <-0.530546, 11.557887, 0.3>
  }
  photons {
    collect off
  }
  rotate <-180.0, -0.0, -180.0>
  translate  <-0.08, -1.03, 0.6>
}
#declare CSG151 = union {
  object { CSG148 }
  object { CSG149 }
  object { CSG150 }
  photons {
    collect off
  }
  rotate -58.400002*x
  translate  <0.0, -0.257237, 7.847807>
}
#declare CSG152 = union {
  cylinder { // Cylndr163
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  0.08*x
  }
  box { // Cube143
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  cylinder { // Cylndr164
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  photons {
    collect off
  }
}
#declare CSG153 = union {
  cylinder { // Cylndr165
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.0, 1.0, -0.3>
  }
  box { // Cube144
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.5, 0.3>
    translate  0.5*y
  }
  photons {
    collect off
  }
  rotate -12.0*z
  translate  1.0*y
}
#declare CSG154 = union {
  box { // Cube145
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 1.0, 0.3>
    rotate -0.0*y
    translate  <0.207, 2.977, 0.0>
  }
  cylinder { // Cylndr166
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate 90.0*y
    translate  <0.128, 4.0, 0.0>
  }
  photons {
    collect off
  }
  rotate -0.0*y
}
#declare CSG155 = union {
  object { CSG152 }
  object { CSG153 }
  object { CSG154 }
  photons {
    collect off
  }
  rotate 30.0*x
  translate  0.3*z
}
#declare CSG156 = union {
  object { CSG151 }
  object { CSG155 }
  torus { // Torus28
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.13, 3.447897, 2.3>
  }
  torus { // Torus29
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.45, 3.447897, 2.3>
  }
  photons {
    collect off
  }
  translate  1.032103*y
}
#declare CSG157 = union {
  object { CSG156 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp29 = lathe {
  linear_spline
  23  // control points
  <0.000019, -0.953134>,
  <0.134835, -0.953189>,
  <0.157684, -0.902818>,
  <0.214398, -0.895865>,
  <0.240609, -0.849181>,
  <0.296392, -0.842847>,
  <0.319915, -0.794127>,
  <0.374077, -0.790005>,
  <0.39792, -0.742136>,
  <0.452204, -0.739944>,
  <0.475782, -0.693106>,
  <0.530019, -0.6893>,
  <0.544633, -0.642672>,
  <0.594049, -0.635826>,
  <0.611261, -0.589712>,
  <0.663579, -0.581987>,
  <0.685446, -0.539124>,
  <0.484742, 0.930035>,
  <0.473941, 0.956343>,
  <0.454215, 0.981157>,
  <0.42602, 0.999908>,
  <0.385349, 1.007429>,
  <-0.001565, 1.007825>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  rotate 32.5*x
  translate  <0.37, 6.32, -0.6>
}
#declare Cube146 = object {
  box { // Cube146
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}
#declare CSG161 = union {
  cylinder { // Cylndr170
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube149
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr171
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus30
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.033, 0.0>
}
#declare CSG164 = union {
  cylinder { // Cylndr172
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube150
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr173
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus31
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.033, 0.0>
}
#declare Cube151 = object {
  box { // Cube151
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.14, 0.1, 0.32>
    translate  <0.0, 0.56, 0.3>
  }
}




//
// ********  OBJECTS  *******
//

#declare Reif1 = difference {
  cylinder { // ReifAus1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.48, 10.48, 1.5>
  }
  cylinder { // ReifInn1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.25, 10.25, 1.6>
    translate  -0.05*z
  }
  material {
    BlackWood
  }
  photons {
    collect off
  }
}
#declare ZierStreifen1 = difference {
  cylinder { // ZierAus1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.5, 10.5, 0.6>
    translate  0.45*z
  }
  cylinder { // ZierInn1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.42, 10.42, 0.65>
    translate  0.425*z
  }
  material {
    Scanner
  }
  photons {
    collect off
  }
}
#declare FellRing_BD2 = union {
  object { Reif1 }
  object { ZierStreifen1 }
  torus { // Torus1
    10.364, 0.111  rotate -x*90
    material {
      BlackWood
    }
    photons {
      collect off
    }
    translate  1.5*z
  }
  photons {
    collect off
  }
  translate  17.5*z
}
#declare Reif = difference {
  cylinder { // ReifAus
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.48, 10.48, 1.5>
  }
  cylinder { // ReifInn
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.2, 10.2, 1.6>
    translate  -0.05*z
  }
  material {
    BlackWood
  }
  photons {
    collect off
  }
}
#declare ZierStreifen = difference {
  cylinder { // ZierAus
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.5, 10.5, 0.6>
    translate  0.45*z
  }
  cylinder { // ZierInn
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.42, 10.42, 0.65>
    translate  0.425*z
  }
  material {
    Scanner
  }
  photons {
    collect off
  }
}
#declare FellRing_BD1 = union {
  object { Reif }
  object { ZierStreifen }
  torus { // Torus2
    10.34, 0.14  rotate -x*90
    material {
      BlackWood
    }
    photons {
      collect off
    }
  }
  photons {
    collect off
  }
  translate  -1.0*z
}
#declare SpannElementBBD = union {
  object { SpannElementBD1 }
  object { // SpannElementBD2 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate -36.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // SpannElementBD3 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate -72.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // SpannElementBD4 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // SpannElementBD5 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate -144.0*z
    translate  <0.0, -0.0, -0.0>
  }
  object { // SpannElementBD6 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, -0.0, -0.0>
  }
  object { // SpannElementBD7 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate 144.0*z
    translate  <0.0, -0.0, -0.0>
  }
  object { // SpannElementBD8 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate 108.0*z
    translate  <-0.0, -0.0, -0.0>
  }
  object { // SpannElementBD9 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate 72.0*z
    translate  <-0.0, -0.0, -0.0>
  }
  object { // SpannElementBD10 -> SpannElementBD1
    SpannElementBD1
    photons {
      collect off
    }
    rotate 36.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare SpannElementABD = union {
  object { // SpannElement20 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate 36.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // SpannElement19 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate 72.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // SpannElement18 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate 108.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // SpannElement17 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate 144.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // SpannElement16 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // SpannElement15 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate -144.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // SpannElement14 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // SpannElement13 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate -72.0*z
    translate  0.0*x
  }
  object { // SpannElement12 -> SpannElement11
    SpannElement11
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { SpannElement11 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare ALUform1 = lathe {
  linear_spline
  29  // control points
  <10.220531, -0.481195>,
  <10.220616, -0.611432>,
  <10.227224, -0.632564>,
  <10.240644, -0.645279>,
  <10.256669, -0.649601>,
  <10.392927, -0.649926>,
  <10.406737, -0.646052>,
  <10.420977, -0.635375>,
  <10.429368, -0.611926>,
  <10.429429, -0.465361>,
  <10.430312, -0.461804>,
  <10.433862, -0.460027>,
  <10.445672, -0.459975>,
  <10.449129, -0.461818>,
  <10.450143, -0.465957>,
  <10.450176, -0.614499>,
  <10.445995, -0.630278>,
  <10.437018, -0.648455>,
  <10.423186, -0.661058>,
  <10.405281, -0.668864>,
  <10.252037, -0.668926>,
  <10.228895, -0.66234>,
  <10.215347, -0.653355>,
  <10.207564, -0.640026>,
  <10.20098, -0.613638>,
  <10.200995, -0.482585>,
  <10.202145, -0.47825>,
  <10.20718, -0.477458>,
  <10.220519, -0.481182>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare PVCform1 = lathe {
  linear_spline
  17  // control points
  <0.0, -0.004>,
  <10.0, -0.004>,
  <10.220649, -0.480592>,
  <10.220616, -0.611432>,
  <10.227224, -0.632564>,
  <10.240644, -0.645279>,
  <10.256669, -0.649601>,
  <10.392927, -0.649926>,
  <10.406737, -0.646052>,
  <10.420977, -0.635375>,
  <10.429368, -0.611926>,
  <10.429369, -0.475245>,
  <10.400195, -0.488669>,
  <10.254925, -0.48859>,
  <10.229596, -0.47507>,
  <10.004, 0.004>,
  <-0.0, 0.004>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare Fell1 = union {
  object { ALUform1 }
  object { PVCform1 }
  photons {
    collect off
  }
}
#declare ALUform2 = lathe {
  linear_spline
  29  // control points
  <10.220531, -0.481195>,
  <10.220616, -0.611432>,
  <10.227224, -0.632564>,
  <10.240644, -0.645279>,
  <10.256669, -0.649601>,
  <10.392927, -0.649926>,
  <10.406737, -0.646052>,
  <10.420977, -0.635375>,
  <10.429368, -0.611926>,
  <10.429429, -0.465361>,
  <10.430312, -0.461804>,
  <10.433862, -0.460027>,
  <10.445672, -0.459975>,
  <10.449129, -0.461818>,
  <10.450143, -0.465957>,
  <10.450176, -0.614499>,
  <10.445995, -0.630278>,
  <10.437018, -0.648455>,
  <10.423186, -0.661058>,
  <10.405281, -0.668864>,
  <10.252037, -0.668926>,
  <10.228895, -0.66234>,
  <10.215347, -0.653355>,
  <10.207564, -0.640026>,
  <10.20098, -0.613638>,
  <10.200995, -0.482585>,
  <10.202145, -0.47825>,
  <10.20718, -0.477458>,
  <10.220519, -0.481182>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  rotate -180.0*x
  translate  0.04*z
}
#declare PVCform2 = lathe {
  linear_spline
  17  // control points
  <0.0, -0.004>,
  <10.0, -0.004>,
  <10.220649, -0.480592>,
  <10.220616, -0.611432>,
  <10.227224, -0.632564>,
  <10.240644, -0.645279>,
  <10.256669, -0.649601>,
  <10.392927, -0.649926>,
  <10.406737, -0.646052>,
  <10.420977, -0.635375>,
  <10.429368, -0.611926>,
  <10.429369, -0.475245>,
  <10.400195, -0.488669>,
  <10.254925, -0.48859>,
  <10.229596, -0.47507>,
  <10.004, 0.004>,
  <-0.0, 0.004>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
  rotate -180.0*x
  translate  0.04*z
}
#declare Fell2 = union {
  object { ALUform2 }
  object { PVCform2 }
  photons {
    collect off
  }
}
#declare BockBD4_Ref = object {
  Bock
  photons {
    collect off
  }
  scale 1.2
  rotate -180.0*x
  translate  <10.9, 0.0, 8.0>
}
#declare BlechBD4_Ref = object {
  BLECH
  photons {
    collect off
  }
  scale 1.2
  translate  <10.98, 0.0, 11.68>
}
#include "C:\github\scenes\Waltari2019\drums\piecksl.inc"

#declare PiecksL_Ref = object {
  PiecksL
  photons {
    collect off
  }
  rotate <42.0, 90.0, 0.0>
  translate  <10.88, 0.0, 9.64>
}
#declare CSG140 = union {
  cylinder { // Cylndr143
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.3>
  }
  box { // Cube134
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr144
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate <90.0, -0.0, 5.2>
  translate  <10.9, -0.25, 9.0>
}
#declare CSG139 = union {
  cylinder { // Cylndr141
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.3>
  }
  box { // Cube133
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr142
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate <90.0, -0.0, 5.2>
  translate  <10.9, -0.25, 10.3>
}
#declare StandElementBD1 = union {
  object { BockBD4_Ref }
  object { BlechBD4_Ref }
  object { PiecksL_Ref }
  object { CSG140 }
  object { CSG139 }
  photons {
    collect off
  }
  rotate 11.0*z
}
#declare BockBD5_Ref = object {
  Bock
  photons {
    collect off
  }
  scale 1.2
  rotate -180.0*y
  translate  <-10.98, 0.0, 8.0>
}
#declare BlechBD5_Ref = object {
  BLECH
  photons {
    collect off
  }
  scale 1.2
  rotate -180.0*y
  translate  <-10.98, 0.0, 8.0>
}
#include "C:\github\scenes\Waltari2019\drums\piecksr.inc"

#declare PiecksR_Ref = object {
  PiecksR
  photons {
    collect off
  }
  rotate <138.0, 90.0, 0.0>
  translate  <-10.98, 0.0, 9.5>
}
#declare CSG141 = union {
  cylinder { // Cylndr145
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.3>
  }
  box { // Cube135
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr146
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate <90.0, 0.0, -5.2>
  translate  <-10.9, -0.25, 9.0>
}
#declare CSG142 = union {
  cylinder { // Cylndr147
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.3>
  }
  box { // Cube136
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr148
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate <90.0, 0.0, -5.2>
  translate  <-10.9, -0.25, 10.3>
}
#declare StandElementBD2 = union {
  object { BockBD5_Ref }
  object { BlechBD5_Ref }
  object { PiecksR_Ref }
  object { CSG141 }
  object { CSG142 }
  photons {
    collect off
  }
  rotate -11.0*z
}
#declare BassStand = union {
  object { StandElementBD1 }
  object { StandElementBD2 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#include "C:\github\scenes\Waltari2019\drums\sockelbd.inc"

#declare SockelBD_Ref = object {
  SockelBD
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate 90.0*x
  translate  <0.0, -9.75, 9.75>
}
#declare Tube_Inn = union {
  cylinder { // TubeInn
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <9.6, 9.6, 18.1>
    translate  -0.05*z
  }
  cylinder { // Cylndr1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.05, 10.05, 0.1>
    translate  -0.05*z
  }
  cylinder { // Cylndr2
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <10.05, 10.05, 0.1>
    translate  17.95*z
  }
  material {
    Maple_Tube_Inn
    scale <1.0, 1.0, 0.6>
    translate <7.880000, -80.000000, 9.000000>
  }
  photons {
    collect off
  }
}
#declare DrumTube_BD = difference {
  cylinder { // Tube_Auss
    <0,0,1>, <0,0,0>, 1 
    material {
      Scanner_Tube_Modif
    }
    photons {
      collect off
    }
    scale <10.0, 10.0, 18.0>
  }
  object { Tube_Inn }
  photons {
    collect off
  }
}
#declare CSG143 = union {
  cylinder { // Cylndr150
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.6>
    translate  -0.3*z
  }
  box { // Cube137
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr151
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate 124.0*x
  translate  <1.14, -10.4, 8.98>
}
#declare CSG144 = union {
  cylinder { // Cylndr152
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.6>
    translate  -0.3*z
  }
  box { // Cube138
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr153
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate 124.0*x
  translate  <-1.14, -10.4, 8.98>
}
#declare BDKess = union {
  object { SockelBD_Ref }
  object { DrumTube_BD }
  object { CSG143 }
  object { CSG144 }
  photons {
    collect off
  }
}
#declare CSG127 = union {
  cylinder { // Cylndr119
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.3>
  }
  box { // Cube007
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr120
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate -20.0*z
  translate  <-0.15, 0.0, -1.8>
}
#declare CSG128 = union {
  cylinder { // Cylndr121
    <0,0,1>, <0,0,0>, 1 
    material {
      Chrome_Textur_Modif
    }
    photons {
      collect off
    }
    scale <0.09, 0.09, 6.0>
    rotate -25.0*y
    translate  <-0.15, 0.0, -2.2>
  }
  superellipsoid { // SuperQ8
    <1.0, 1.0>
    material {
      Filz_Texture
    }
    photons {
      collect off
    }
    rotate -25.0*y
    translate  <-2.363078, 0.0, 2.531744>
  }
  photons {
    collect off
  }
}
#include "C:\github\scenes\Waltari2019\drums\tighten.inc"

#declare Tighten10_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate <180.0, 0.0, -40.0>
  translate  <-0.6, 0.0, -7.65>
}
#declare BezPtch6 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-2.169890, 0.031297, 2.810642>, <-2.186999, -3.837246, 2.810642>, <10.926728, -3.834638, 2.810642>, <10.926728, 0.031299, 2.810642>, 
      <-2.085206, 0.054470, 4.375662>, <-2.085206, -3.069513, 4.375662>, <10.340161, -3.047632, 4.396155>, <10.340161, 0.065516, 4.396155>, 
      <-1.548850, 0.054470, 6.654285>, <-1.548850, -3.463454, 6.654285>, <9.423330, -3.458243, 6.654285>, <9.423330, 0.048408, 6.654285>, 
      <-1.000000, -0.000002, 6.000000>, <-1.000000, -1.333333, 6.000000>, <1.000000, -1.333333, 6.000000>, <1.000000, -0.000000, 6.000000>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <10.926728, 0.031299, 2.810642>, <10.926728, 3.897235, 2.810642>, <-2.152781, 3.899840, 2.810642>, <-2.169890, 0.031297, 2.810642>, 
      <10.340161, 0.065516, 4.396155>, <10.340161, 3.178664, 4.396155>, <-2.085206, 3.178453, 4.375662>, <-2.085206, 0.054470, 4.375662>, 
      <9.423330, 0.048408, 6.654285>, <9.423330, 3.555059, 6.654285>, <-1.548850, 3.572394, 6.654285>, <-1.548850, 0.054470, 6.654285>, 
      <1.000000, -0.000000, 6.000000>, <1.000000, 1.333333, 6.000000>, <-1.000000, 1.333330, 6.000000>, <-1.000000, -0.000002, 6.000000>
    }
  }
  photons {
    collect off
  }
  scale 0.2
  translate  <-0.6, 0.0, -9.2>
}
#include "C:\github\scenes\Waltari2019\drums\torsion.inc"

#declare Torsion_Ref = object {
  Torsion
  photons {
    collect off
  }
  scale 0.04
  rotate 65.0*y
  translate  -2.5*z
}
#include "C:\github\scenes\Waltari2019\drums\buegel.inc"

#declare Buegel1_Ref = object {
  Buegel
  photons {
    collect off
  }
  scale <1.0, 1.0, 1.25>
  rotate 26.0*y
  translate  <1.038116, 0.0, -2.210869>
}
#include "C:\github\scenes\Waltari2019\drums\draht.inc"

#declare Draht1_Ref = object {
  Draht
  photons {
    collect off
  }
  scale 0.98
  translate  <-0.786, 0.0, -9.0>
}
#declare CSG129 = union {
  cylinder { // Cylndr122
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 0.8>
    rotate <-90.0, 31.0, 0.0>
    translate  <1.05692, -0.4, -2.164877>
  }
  object { Tighten10_Ref }
  object { BezPtch6 }
  object { Torsion_Ref }
  object { Buegel1_Ref }
  object { Draht1_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare FPedal1 = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  29  // control points
  <-3.998849, -2.005798>,
  <-3.21591, -1.930575>,
  <-2.53143, -1.741123>,
  <-2.006567, -1.49256>,
  <-1.455243, -1.091316>,
  <-0.500501, -0.401008>,
  <-0.000501, -0.401008>,
  <-0.000501, 0.398992>,
  <-0.500501, 0.398992>,
  <-1.542245, 1.124219>,
  <-2.06296, 1.475203>,
  <-2.601087, 1.773948>,
  <-3.280375, 1.940038>,
  <-3.994489, 2.053889>,
  <-4.704081, 1.949976>,
  <-5.378847, 1.776411>,
  <-5.941823, 1.539735>,
  <-6.499559, 1.099905>,
  <-10.000342, 1.100229>,
  <-10.000009, 0.700017>,
  <-9.40001, 0.700027>,
  <-9.400803, -0.70013>,
  <-10.000013, -0.700003>,
  <-10.000086, -1.099992>,
  <-6.500848, -1.099915>,
  <-5.943784, -1.524292>,
  <-5.37463, -1.796531>,
  <-4.783664, -1.941447>,
  <-3.998849, -2.005798>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.4>
  translate  -0.2*z
}
#declare CSG130 = union {
  cylinder { // Cylndr123
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.8>
    rotate -90.0*x
    translate  -0.4*y
  }
  object { FPedal1 }
  cylinder { // Cylndr124
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.4>
    rotate -90.0*x
    translate  <-10.0, -1.1, 0.0>
  }
  cylinder { // Cylndr125
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.4>
    rotate -90.0*x
    translate  <-10.0, 0.7, 0.0>
  }
  photons {
    collect off
  }
}
#declare FPedalA1 = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <-1.437818, 1.233365>,
  <-1.680252, 1.10391>,
  <-1.90738, 0.951919>,
  <-2.01594, 0.863854>,
  <-2.024458, 0.848619>,
  <-2.025424, 0.830925>,
  <-2.015916, 0.815356>,
  <-2.000906, 0.809961>,
  <-1.52312, 0.809509>,
  <-1.277377, 0.942529>,
  <-1.042103, 1.047258>,
  <-0.806829, 1.116116>,
  <-0.585608, 1.162698>,
  <-0.369258, 1.180871>,
  <-0.192244, 1.185096>,
  <-0.192244, 1.491004>,
  <-0.419161, 1.48713>,
  <-0.680976, 1.455831>,
  <-0.949967, 1.401058>,
  <-1.190679, 1.338461>,
  <-1.437818, 1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalB1 = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <1.437818, 1.233365>,
  <1.680252, 1.10391>,
  <1.90738, 0.951919>,
  <2.01594, 0.863854>,
  <2.024458, 0.848619>,
  <2.025424, 0.830925>,
  <2.015916, 0.815356>,
  <2.000906, 0.809961>,
  <1.52312, 0.809509>,
  <1.277377, 0.942529>,
  <1.042103, 1.047258>,
  <0.806829, 1.116116>,
  <0.585608, 1.162698>,
  <0.369258, 1.180871>,
  <0.192244, 1.185096>,
  <0.192244, 1.491004>,
  <0.419161, 1.48713>,
  <0.680976, 1.455831>,
  <0.949967, 1.401058>,
  <1.190679, 1.338461>,
  <1.437818, 1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalC1 = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <1.437818, -1.233365>,
  <1.680252, -1.10391>,
  <1.90738, -0.951919>,
  <2.01594, -0.863854>,
  <2.024458, -0.848619>,
  <2.025424, -0.830925>,
  <2.015916, -0.815356>,
  <2.000906, -0.809961>,
  <1.52312, -0.809509>,
  <1.277377, -0.942529>,
  <1.042103, -1.047258>,
  <0.806829, -1.116116>,
  <0.585608, -1.162698>,
  <0.369258, -1.180871>,
  <0.192244, -1.185096>,
  <0.192244, -1.491004>,
  <0.419161, -1.48713>,
  <0.680976, -1.455831>,
  <0.949967, -1.401058>,
  <1.190679, -1.338461>,
  <1.437818, -1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalD1 = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <-1.437818, -1.233365>,
  <-1.680252, -1.10391>,
  <-1.90738, -0.951919>,
  <-2.01594, -0.863854>,
  <-2.024458, -0.848619>,
  <-2.025424, -0.830925>,
  <-2.015916, -0.815356>,
  <-2.000906, -0.809961>,
  <-1.52312, -0.809509>,
  <-1.277377, -0.942529>,
  <-1.042103, -1.047258>,
  <-0.806829, -1.116116>,
  <-0.585608, -1.162698>,
  <-0.369258, -1.180871>,
  <-0.192244, -1.185096>,
  <-0.192244, -1.491004>,
  <-0.419161, -1.48713>,
  <-0.680976, -1.455831>,
  <-0.949967, -1.401058>,
  <-1.190679, -1.338461>,
  <-1.437818, -1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare CSG131 = difference {
  object { CSG130 }
  box { // Cube98
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.35, 0.2, 0.22>
  }
  object { FPedalA1 }
  object { FPedalB1 }
  object { FPedalC1 }
  object { FPedalD1 }
  photons {
    collect off
  }
}
#declare CSG132 = union {
  object { CSG131 }
  box { // Cube99
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-9.0, 0.0, 0.2>
  }
  box { // Cube100
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.7, 0.0, 0.2>
  }
  box { // Cube101
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.4, 0.0, 0.2>
  }
  box { // Cube102
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.1, 0.0, 0.2>
  }
  box { // Cube103
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.8, 0.0, 0.2>
  }
  box { // Cube104
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.5, 0.0, 0.2>
  }
  box { // Cube105
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.2, 0.0, 0.2>
  }
  box { // Cube106
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.9, 0.0, 0.2>
  }
  box { // Cube107
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.6, 0.0, 0.2>
  }
  box { // Cube108
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.3, 0.0, 0.2>
  }
  box { // Cube109
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.0, 0.0, 0.2>
  }
  box { // Cube110
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.7, 0.0, 0.2>
  }
  box { // Cube111
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.4, 0.0, 0.2>
  }
  box { // Cube112
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.1, 0.0, 0.2>
  }
  box { // Cube113
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.8, 0.0, 0.2>
  }
  box { // Cube114
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.5, 0.0, 0.2>
  }
  box { // Cube115
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.2, 0.0, 0.2>
  }
  box { // Cube116
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.9, 0.0, 0.2>
  }
  box { // Cube117
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.6, 0.0, 0.2>
  }
  box { // Cube118
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.3, 0.0, 0.2>
  }
  box { // Cube119
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.0, 0.0, 0.2>
  }
  box { // Cube120
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.7, 0.0, 0.2>
  }
  box { // Cube121
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.4, 0.0, 0.2>
  }
  box { // Cube122
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.1, 0.0, 0.2>
  }
  box { // Cube123
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-1.8, 0.0, 0.2>
  }
  box { // Cube124
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-1.5, 0.0, 0.2>
  }
  cylinder { // Cylndr126
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 0.8>
    rotate <-90.0, 31.0, 0.0>
    translate  <0.001124, -0.4, 0.001871>
  }
  cylinder { // Cylndr127
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 2.3>
    rotate <-90.0, 25.0, 0.0>
    translate  <-10.009571, -1.150453, -0.001734>
  }
  material {
    Aluminum_Act
  }
  photons {
    collect off
  }
  rotate -25.0*y
  translate  <-0.955, 0.0, -4.92>
}
#declare CSG133 = union {
  superellipsoid { // SuperQ9
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.4, 0.5, 1.0>
    translate  <0.0, 1.7, -8.5>
  }
  superellipsoid { // SuperQ10
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <1.4, 2.5, 0.4>
    translate  <0.25, 0.0, -9.25>
  }
  superellipsoid { // SuperQ11
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.4, 0.5, 1.0>
    translate  <0.0, -1.7, -8.5>
  }
  photons {
    collect off
  }
}
#declare CSG134 = union {
  box { // Cube004
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <1.1, 1.2, 0.3>
    translate  <-0.8, 0.0, -0.3>
  }
  box { // Cube005
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.4, 0.8, 0.2>
    rotate -6.0*x
    translate  <-0.1, -1.8, -0.1>
  }
  box { // Cube125
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.4, 0.8, 0.2>
    rotate 6.0*x
    translate  <-0.1, 1.8, -0.1>
  }
  box { // Cube006
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.271429, 2.1, 0.3>
    rotate -0.0*y
    translate  <-1.571429, 0.0, -0.3>
  }
  photons {
    collect off
  }
  scale <1.4, 1.0, 1.0>
  translate  <1.4, 0.0, -8.8>
}
#declare CSG135 = difference {
  object { CSG133 }
  object { CSG134 }
  photons {
    collect off
  }
  translate  0.1*z
}
#declare CSG136 = union {
  box { // Cube126
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.8, 1.1, 0.3>
    translate  <-9.6, 0.0, -9.25>
  }
  cylinder { // Cylndr128
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 1.3>
    rotate -90.0*x
    translate  <-8.567819, -0.65, -9.152294>
  }
  box { // Cube127
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.13, 0.65, 0.2>
    translate  <-8.7, 0.0, -9.15177>
  }
  box { // Cube128
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.7, 0.0, -8.933495>
  }
  box { // Cube129
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.4, 0.0, -8.933495>
  }
  box { // Cube130
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.1, 0.0, -8.933495>
  }
  box { // Cube131
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-10.0, 0.0, -8.933495>
  }
  cylinder { // Cylndr129
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.6>
    translate  <-10.4, -0.9, -9.55>
  }
  cylinder { // Cylndr130
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.6>
    translate  <-10.4, 0.9, -9.55>
  }
  box { // Cube132
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.1, 0.9, 0.3>
    translate  <-10.5, 0.0, -9.25>
  }
  photons {
    collect off
  }
  translate  -1.44*x
}
#declare CSG137 = union {
  cylinder { // Cylndr131
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.25, 0.25, 6.0>
    translate  <0.0, 1.8, -8.5>
  }
  cylinder { // Cylndr132
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.25, 0.25, 6.0>
    translate  <0.0, -1.8, -8.5>
  }
  cylinder { // Cylndr133
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.7>
    rotate -90.0*x
    translate  <0.0, -2.1, -2.5>
  }
  cylinder { // Cylndr134
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.7>
    rotate -90.0*x
    translate  <0.0, 1.4, -2.5>
  }
  photons {
    collect off
  }
}
#declare CSG138 = union {
  object { CSG135 }
  object { CSG136 }
  superellipsoid { // SuperQ12
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.2, 0.4, 0.5>
    translate  -8.9*z
  }
  object { CSG137 }
  superellipsoid { // SuperQ13
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.2, 0.4, 0.5>
    rotate -90.0*z
    translate  <-0.4, 0.0, -8.9>
  }
  material {
    Aluminum_Act
  }
  photons {
    collect off
  }
}
#declare FodPedal = union {
  object { CSG127 }
  object { CSG128 }
  object { CSG129 }
  object { CSG132 }
  object { CSG138 }
  photons {
    collect off
  }
  rotate <90.0, 90.0, 0.0>
  translate  <0.0, 1.14, 20.0>
}
#declare BlechrefA = union {
  object { // Blech_HT1 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // Blech_HT2 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // Blech_HT3 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT4 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT5 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT6 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, -0.0, -0.0>
  }
  object { // Blech_HT7 -> Blech_HT
    Blech_HT_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, -0.0, -0.0>
  }
  photons {
    collect off
  }
}
#declare BockrefA = union {
  object { // Bock_HT1 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate -45.0*z
  }
  object { // Bock_HT2 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // Bock_HT3 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  0.0*y
  }
  object { // Bock_HT4 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // Bock_HT5 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // Bock_HT6 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // Bock_HT7 -> Bock_HT
    Bock_HT_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, -0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare ScrewrefA = union {
  object { // screw1 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  0.0*z
  }
  object { // screw2 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // screw3 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // screw4 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw5 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw6 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw7 -> Screw
    Screw_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, 0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare SpannElementA_HT = union {
  object { Blech_HT_Ref }
  object { Bock_HT_Ref }
  object { BlechrefA }
  object { BockrefA }
  object { Screw_Ref }
  object { ScrewrefA }
  photons {
    collect off
  }
}
#declare RotSwp001 = lathe {
  linear_spline
  31  // control points
  <6.038144, -0.010798>,
  <6.057176, -0.021858>,
  <6.227507, -0.022048>,
  <6.251018, -0.032239>,
  <6.261764, -0.050471>,
  <6.284026, -0.228681>,
  <6.310176, -0.224695>,
  <6.288166, -0.049572>,
  <6.281644, -0.030902>,
  <6.266658, -0.015022>,
  <6.252574, -0.005675>,
  <6.232268, 0.000135>,
  <6.074548, 0.000581>,
  <6.063038, 0.007647>,
  <6.057013, 0.021611>,
  <6.05791, 0.421339>,
  <6.150991, 0.437276>,
  <6.155546, 0.439823>,
  <6.157351, 0.445165>,
  <6.155163, 0.458472>,
  <6.151814, 0.462612>,
  <6.146601, 0.463675>,
  <6.061229, 0.448872>,
  <6.052655, 0.447064>,
  <6.045582, 0.444734>,
  <6.038551, 0.439377>,
  <6.033122, 0.432489>,
  <6.030262, 0.424551>,
  <6.028277, 0.415736>,
  <6.027634, 0.007049>,
  <6.036657, -0.009941>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  12.0*z
}
#declare FellRingA = union {
  object { RotSwp001 }
  object { NaseHT_Ref }
  object { // NaseHT2 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // NaseHT3 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseHT4 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseHT5 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  -0.0*x
  }
  object { // NaseHT6 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // NaseHT7 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseHT1 -> NaseHT
    NaseHT_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  <0.0, -0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare HeadRingA_HT = union {
  object { SpannElementA_HT }
  object { FellRingA }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate -22.5*z
  translate  -6.01916*z
}
#declare BlechrefA1 = union {
  object { // Blech_HT9 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // Blech_HT10 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, -0.0>
  }
  object { // Blech_HT11 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT12 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT13 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, -0.0>
  }
  object { // Blech_HT14 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, -0.0, -0.0>
  }
  object { // Blech_HT15 -> Blech_HT8
    Blech_HT8_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, -0.0, -0.0>
  }
  photons {
    collect off
  }
}
#declare BockrefA1 = union {
  object { // Bock_HT9 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate -45.0*z
  }
  object { // Bock_HT10 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // Bock_HT11 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  0.0*y
  }
  object { // Bock_HT12 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // Bock_HT13 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // Bock_HT14 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // Bock_HT15 -> Bock_HT8
    Bock_HT8_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, -0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare ScrewrefA1 = union {
  object { // screw8 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  0.0*z
  }
  object { // screw9 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // screw10 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // screw11 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw12 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw13 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // screw14 -> Screw1
    Screw1_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, 0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare SpannElementA_HT1 = union {
  object { Blech_HT8_Ref }
  object { Bock_HT8_Ref }
  object { BlechrefA1 }
  object { BockrefA1 }
  object { Screw1_Ref }
  object { ScrewrefA1 }
  photons {
    collect off
  }
}
#declare RotSwp2 = lathe {
  linear_spline
  27  // control points
  <6.038144, -0.010798>,
  <6.057176, -0.021858>,
  <6.227507, -0.022048>,
  <6.251018, -0.032239>,
  <6.261764, -0.050471>,
  <6.282825, -0.224118>,
  <6.310176, -0.224695>,
  <6.288166, -0.049572>,
  <6.281644, -0.030902>,
  <6.266658, -0.015022>,
  <6.252574, -0.005675>,
  <6.232268, 0.000135>,
  <6.074548, 0.000581>,
  <6.063038, 0.007647>,
  <6.057013, 0.021611>,
  <6.056817, 0.420245>,
  <6.149897, 0.436182>,
  <6.154452, 0.438729>,
  <6.156258, 0.444072>,
  <6.154069, 0.457379>,
  <6.150721, 0.461518>,
  <6.145507, 0.462581>,
  <6.046992, 0.445588>,
  <6.033781, 0.440596>,
  <6.027184, 0.428224>,
  <6.027634, 0.007049>,
  <6.036657, -0.009941>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  12.0*z
}
#declare FellRingA1 = union {
  object { RotSwp2 }
  object { NaseHT8_Ref }
  object { // NaseHT9 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate -90.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // NaseHT10 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate -135.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseHT11 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // NaseHT12 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate 135.0*z
    translate  -0.0*x
  }
  object { // NaseHT13 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate 90.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  object { // NaseHT14 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate 45.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseHT15 -> NaseHT8
    NaseHT8_Ref
    photons {
      collect off
    }
    rotate -45.0*z
    translate  <0.0, -0.0, 0.0>
  }
  photons {
    collect off
  }
}
#declare HeadRingB_HT = union {
  object { SpannElementA_HT1 }
  object { FellRingA1 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate <180.0, 0.0, -22.5>
  translate  6.027*z
}
#declare ALUform3 = lathe {
  linear_spline
  29  // control points
  <6.025081, -0.459538>,
  <6.025167, -0.589775>,
  <6.031774, -0.610907>,
  <6.045194, -0.623622>,
  <6.06122, -0.627944>,
  <6.175344, -0.627742>,
  <6.189154, -0.623868>,
  <6.203393, -0.613191>,
  <6.211784, -0.589743>,
  <6.211845, -0.460568>,
  <6.212728, -0.457011>,
  <6.216278, -0.455234>,
  <6.228089, -0.45729>,
  <6.231546, -0.459133>,
  <6.232559, -0.463273>,
  <6.232592, -0.592315>,
  <6.228412, -0.608094>,
  <6.219434, -0.626271>,
  <6.205602, -0.638875>,
  <6.187697, -0.64668>,
  <6.056587, -0.647269>,
  <6.033445, -0.640683>,
  <6.019898, -0.631698>,
  <6.012115, -0.618369>,
  <6.00553, -0.591981>,
  <6.005546, -0.460928>,
  <6.007222, -0.456593>,
  <6.011731, -0.455802>,
  <6.02507, -0.459525>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare PVCform3 = lathe {
  linear_spline
  17  // control points
  <0.0, -0.419799>,
  <5.999682, -0.420938>,
  <6.026063, -0.458994>,
  <6.026177, -0.589244>,
  <6.032784, -0.610376>,
  <6.046204, -0.623091>,
  <6.06223, -0.627413>,
  <6.174502, -0.627591>,
  <6.188755, -0.62283>,
  <6.202551, -0.612152>,
  <6.210942, -0.588704>,
  <6.210944, -0.455862>,
  <6.181769, -0.468399>,
  <6.060486, -0.466402>,
  <6.035157, -0.452438>,
  <6.004554, -0.412152>,
  <0.0, -0.411799>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare Fell3 = union {
  object { ALUform3 }
  object { PVCform3 }
  photons {
    collect off
  }
  translate  -11.545*z
}
#declare ALUform4 = lathe {
  linear_spline
  29  // control points
  <6.025081, -0.459538>,
  <6.025167, -0.589775>,
  <6.031774, -0.610907>,
  <6.045194, -0.623622>,
  <6.06122, -0.627944>,
  <6.175344, -0.627742>,
  <6.189154, -0.623868>,
  <6.203393, -0.613191>,
  <6.211784, -0.589743>,
  <6.211845, -0.460568>,
  <6.212728, -0.457011>,
  <6.216278, -0.455234>,
  <6.228089, -0.45729>,
  <6.231546, -0.459133>,
  <6.232559, -0.463273>,
  <6.232592, -0.592315>,
  <6.228412, -0.608094>,
  <6.219434, -0.626271>,
  <6.205602, -0.638875>,
  <6.187697, -0.64668>,
  <6.056587, -0.647269>,
  <6.033445, -0.640683>,
  <6.019898, -0.631698>,
  <6.012115, -0.618369>,
  <6.00553, -0.591981>,
  <6.005546, -0.460928>,
  <6.007222, -0.456593>,
  <6.011731, -0.455802>,
  <6.02507, -0.459525>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare PVCform4 = lathe {
  linear_spline
  17  // control points
  <-0.000036, -0.419798>,
  <5.999646, -0.420938>,
  <6.025583, -0.458994>,
  <6.026141, -0.589243>,
  <6.032748, -0.610376>,
  <6.046168, -0.623091>,
  <6.062194, -0.627412>,
  <6.174465, -0.627147>,
  <6.188275, -0.623273>,
  <6.202515, -0.612596>,
  <6.210906, -0.589148>,
  <6.210907, -0.455419>,
  <6.181733, -0.468842>,
  <6.06045, -0.466401>,
  <6.035121, -0.452881>,
  <6.004982, -0.413039>,
  <-0.000036, -0.411798>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
  translate  17.96*z
}
#declare Fell4 = union {
  object { ALUform4 }
  object { PVCform4 }
  photons {
    collect off
  }
  rotate 180.0*x
  translate  11.544*z
}
#include "C:\github\scenes\Waltari2019\drums\sockelht.inc"

#declare SockelHT_Ref = object {
  SockelHT
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -6.0*x
}
#declare Tube_Inn_HT = union {
  cylinder { // TubeInn_HT
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <5.8, 5.8, 12.1>
    translate  -6.05*z
  }
  cylinder { // Cylndr1_HT
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <6.01, 6.01, 0.01>
    translate  -6.005*z
  }
  cylinder { // Cylndr2_HT
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <6.005, 6.029, 0.01>
    translate  5.993*z
  }
  material {
    Maple_Tube_Inn
    scale <1.0, 1.0, 0.4>
    translate <8.000000, -80.000000, 0.000000>
  }
  photons {
    collect off
  }
}
#declare DrumTube_HT = difference {
  cylinder { // Tube_Auss_HT
    <0,0,1>, <0,0,0>, 1 
    material {
      Scanner_Tube_Modif
    }
    photons {
      collect off
    }
    scale <6.0, 6.0, 12.0>
    translate  -6.0*z
  }
  object { Tube_Inn_HT }
  photons {
    collect off
  }
}
#declare CSG145 = union {
  cylinder { // Cylndr154
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 0.6>
    translate  -0.3*z
  }
  box { // Cube139
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale 0.1
    translate  0.45*z
  }
  cylinder { // Cylndr155
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 0.05>
    translate  0.3*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 1.5
  rotate <0.680061, -44.902225, -0.701331>
  translate  <-6.4, -0.000927, 1.027716>
}
#declare HTKess = union {
  object { SockelHT_Ref }
  object { DrumTube_HT }
  object { CSG145 }
  photons {
    collect off
  }
}
#declare HighTomCslewingD = union {
  object { HeadRingA_HT }
  object { HeadRingB_HT }
  object { Fell3 }
  object { Fell4 }
  object { HTKess }
  photons {
    collect off
  }
  rotate 150.0*x
  translate  <9.12, -9.95, -20.0>
}
#declare RotSwp26 = lathe {
  linear_spline
  10  // control points
  <0.000144, 0.6699>,
  <0.362716, 0.670684>,
  <0.537964, 0.654642>,
  <0.692925, 0.618873>,
  <0.85102, 0.579772>,
  <0.998476, 0.512779>,
  <1.067035, 0.466902>,
  <1.109957, 0.397098>,
  <1.123602, 0.310326>,
  <1.123486, 0.011099>
  rotate <90,0,90>
  photons {
    collect off
  }
}
#declare Tighten11_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate -180.0*x
  translate  0.75*z
}
#declare CSG022 = union {
  object { RotSwp26 }
  cylinder { // Cylndr149
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.6, 0.6, 5.0>
    rotate 90.0*y
  }
  object { Tighten11_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp27 = lathe {
  linear_spline
  10  // control points
  <0.000144, -0.6699>,
  <0.362716, -0.670684>,
  <0.537964, -0.654642>,
  <0.692925, -0.618873>,
  <0.85102, -0.579772>,
  <0.998476, -0.512779>,
  <1.067035, -0.466902>,
  <1.109957, -0.397098>,
  <1.123602, -0.310326>,
  <1.123486, -0.011099>
  rotate <90,0,90>
  photons {
    collect off
  }
}
#declare RotSwp28 = lathe {
  linear_spline
  8  // control points
  <-0.000002, -0.801262>,
  <0.139157, -0.79433>,
  <0.287827, -0.748947>,
  <0.373758, -0.704285>,
  <0.379314, -0.698626>,
  <0.382448, -0.692277>,
  <0.380028, -0.68725>,
  <0.374055, -0.685562>
  rotate <90,0,90>
  photons {
    collect off
  }
}
#declare CSG023 = union {
  cylinder { // Cylndr012
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.6, 0.6, 12.0>
    rotate -90.0*x
  }
  object { RotSwp27 }
  object { RotSwp28 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare Angle = union {
  object { CSG022 }
  object { CSG023 }
  photons {
    collect off
  }
  rotate 90.0*x
  translate  <1.13, -9.95, -20.0>
}
#declare Top3 = union {
  object { HighTomCslewingD }
  object { Angle }
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare BassDrum = union {
  object { FellRing_BD2 }
  object { FellRing_BD1 }
  object { SpannElementBBD }
  object { SpannElementABD }
  object { Fell1 }
  object { Fell2 }
  object { BassStand }
  object { BDKess }
  object { FodPedal }
  object { Top3 }
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare Tube_Inn_HT1 = union {
  cylinder { // TubeInn_HT1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <7.8, 7.8, 16.1>
    translate  -0.05*z
  }
  cylinder { // Cylndr1_HT1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <8.01, 8.01, 0.01>
    translate  -0.005*z
  }
  cylinder { // Cylndr2_HT1
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <8.01, 8.01, 0.01>
    translate  15.993*z
  }
  material {
    Maple_Tube_Inn
    scale <1.0, 1.0, 0.54>
    translate <8.000000, -80.000000, 8.000000>
  }
  photons {
    collect off
  }
}
#declare DrumTube_FT = difference {
  cylinder { // Tube_Auss_HT1
    <0,0,1>, <0,0,0>, 1 
    material {
      Scanner_Tube_Modif
    }
    photons {
      collect off
    }
    scale <8.0, 8.0, 16.0>
  }
  object { Tube_Inn_HT1 }
  photons {
    collect off
  }
}
#declare SpannElementA_FT = union {
  object { Blech_FT_Ref }
  object { // Blech_FT1 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Blech_FT2 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -72.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Blech_FT3 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -108.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Blech_FT4 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -144.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Blech_FT5 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -180.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Blech_FT6 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 144.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Blech_FT7 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 108.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Blech_FT8 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 72.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Blech_FT9 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { Bock_HT16_Ref }
  object { // Bock_HT17 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -36.0>
    translate  0.019157*z
  }
  object { // Bock_HT18 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -72.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Bock_HT19 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -108.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Bock_HT20 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -144.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Bock_HT21 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -180.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Bock_HT22 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 144.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Bock_HT23 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 108.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Bock_HT24 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 72.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Bock_HT25 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { Screw2_Ref }
  object { // Screw3 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -36.0>
  }
  object { // Screw4 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <-0.0, -0.0, -72.0>
  }
  object { // Screw5 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -108.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { // Screw6 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -144.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { // Screw7 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -180.0>
    translate  0.0*x
  }
  object { // Screw8 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 144.0>
  }
  object { // Screw9 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 108.0>
  }
  object { // Screw10 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 72.0>
  }
  object { // Screw11 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 36.0>
    translate  0.0*y
  }
  photons {
    collect off
  }
}
#declare RotSwp3 = lathe {
  linear_spline
  31  // control points
  <8.062529, -0.010798>,
  <8.081561, -0.021858>,
  <8.251892, -0.022048>,
  <8.275403, -0.032239>,
  <8.286149, -0.050471>,
  <8.308411, -0.228681>,
  <8.334562, -0.224695>,
  <8.312552, -0.049572>,
  <8.306029, -0.030902>,
  <8.291043, -0.015022>,
  <8.27696, -0.005675>,
  <8.256653, 0.000135>,
  <8.098933, 0.000581>,
  <8.087423, 0.007647>,
  <8.081398, 0.021611>,
  <8.082296, 0.421339>,
  <8.175376, 0.437276>,
  <8.179931, 0.439823>,
  <8.181737, 0.445165>,
  <8.179548, 0.458472>,
  <8.1762, 0.462612>,
  <8.170986, 0.463675>,
  <8.085614, 0.448872>,
  <8.077041, 0.447064>,
  <8.069967, 0.444734>,
  <8.062936, 0.439377>,
  <8.057507, 0.432489>,
  <8.054647, 0.424551>,
  <8.052663, 0.415736>,
  <8.052019, 0.007049>,
  <8.061042, -0.009941>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  16.0*z
}
#declare FellRingFT = union {
  object { RotSwp3 }
  object { NaseFT_Ref }
  object { // NaseFT1 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { // NaseFT2 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -72.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT3 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT4 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -144.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT5 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  0.0*x
  }
  object { // NaseFT6 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 144.0*z
    translate  0.0*x
  }
  object { // NaseFT7 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 108.0*z
  }
  object { // NaseFT8 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 72.0*z
  }
  object { // NaseFT9 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 36.0*z
    translate  0.0*y
  }
  photons {
    collect off
  }
}
#declare HeadRingA_FT = union {
  object { SpannElementA_FT }
  object { FellRingFT }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -0.019157*z
}
#declare ALUform = lathe {
  linear_spline
  29  // control points
  <8.024703, 15.953909>,
  <8.024788, 15.823672>,
  <8.031396, 15.80254>,
  <8.044816, 15.789825>,
  <8.060841, 15.785503>,
  <8.174965, 15.785705>,
  <8.188775, 15.789579>,
  <8.203015, 15.800256>,
  <8.211406, 15.823704>,
  <8.211467, 15.952879>,
  <8.21235, 15.956436>,
  <8.2159, 15.958213>,
  <8.22771, 15.956157>,
  <8.231167, 15.954314>,
  <8.232181, 15.950174>,
  <8.232214, 15.821132>,
  <8.228033, 15.805353>,
  <8.219056, 15.787176>,
  <8.205224, 15.774572>,
  <8.187319, 15.766767>,
  <8.056209, 15.766178>,
  <8.033067, 15.772764>,
  <8.019519, 15.781749>,
  <8.011737, 15.795078>,
  <8.005152, 15.821466>,
  <8.005167, 15.952519>,
  <8.006844, 15.956854>,
  <8.011352, 15.957645>,
  <8.024691, 15.953922>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
}
#declare PVCform = lathe {
  linear_spline
  17  // control points
  <0.000002, 15.993602>,
  <7.999859, 15.993483>,
  <8.025797, 15.955427>,
  <8.026354, 15.825178>,
  <8.032961, 15.804046>,
  <8.046381, 15.791331>,
  <8.062407, 15.787009>,
  <8.174678, 15.787275>,
  <8.188489, 15.791148>,
  <8.202728, 15.801826>,
  <8.211119, 15.825274>,
  <8.211121, 15.959003>,
  <8.181946, 15.945579>,
  <8.060663, 15.94802>,
  <8.035334, 15.96154>,
  <8.005196, 16.001383>,
  <0.000002, 16.001602>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
}
#declare Fell5 = union {
  object { ALUform }
  object { PVCform }
  photons {
    collect off
  }
}
#declare Blech_FT10_Ref = object {
  BLECH
  photons {
    collect off
  }
  scale 0.6
  translate  <8.49, 0.0, 15.4>
}
#declare Bock_HT26_Ref = object {
  Bock
  photons {
    collect off
  }
  scale 0.6
  translate  <8.45, 0.0, 15.438314>
}
#declare Screw12_Ref = object {
  screw
  photons {
    collect off
  }
  translate  <8.4491, 0.0, 16.019877>
}
#declare SpannElementA_FT1 = union {
  object { Blech_FT10_Ref }
  object { // Blech_FT11 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Blech_FT12 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -72.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Blech_FT13 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -108.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Blech_FT14 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -144.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Blech_FT15 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -180.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Blech_FT16 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 144.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Blech_FT17 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 108.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Blech_FT18 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 72.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Blech_FT19 -> Blech_FT
    Blech_FT_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { Bock_HT26_Ref }
  object { // Bock_HT27 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -36.0>
    translate  0.019157*z
  }
  object { // Bock_HT28 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -72.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { // Bock_HT29 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -108.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Bock_HT30 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -144.0>
    translate  <0.0, 0.0, 0.019157>
  }
  object { // Bock_HT31 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, -180.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Bock_HT32 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 144.0>
    translate  <0.0, -0.0, 0.019157>
  }
  object { // Bock_HT33 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 108.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Bock_HT34 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 72.0>
    translate  <-0.0, -0.0, 0.019157>
  }
  object { // Bock_HT35 -> Bock_HT16
    Bock_HT16_Ref
    photons {
      collect off
    }
    rotate <0.0, 0.0, 36.0>
    translate  <-0.0, 0.0, 0.019157>
  }
  object { Screw12_Ref }
  object { // Screw13 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -36.0>
  }
  object { // Screw14 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <-0.0, -0.0, -72.0>
  }
  object { // Screw15 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -108.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { // Screw16 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -144.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { // Screw17 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, -180.0>
    translate  0.0*x
  }
  object { // Screw18 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 144.0>
  }
  object { // Screw19 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 108.0>
  }
  object { // Screw20 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 72.0>
  }
  object { // Screw21 -> Screw2
    Screw2_Ref
    photons {
      collect off
    }
    rotate <0.0, -0.0, 36.0>
    translate  0.0*y
  }
  photons {
    collect off
  }
}
#declare RotSwp4 = lathe {
  linear_spline
  31  // control points
  <8.062529, -0.010798>,
  <8.081561, -0.021858>,
  <8.251892, -0.022048>,
  <8.275403, -0.032239>,
  <8.286149, -0.050471>,
  <8.308411, -0.228681>,
  <8.334562, -0.224695>,
  <8.312552, -0.049572>,
  <8.306029, -0.030902>,
  <8.291043, -0.015022>,
  <8.27696, -0.005675>,
  <8.256653, 0.000135>,
  <8.098933, 0.000581>,
  <8.087423, 0.007647>,
  <8.081398, 0.021611>,
  <8.082296, 0.421339>,
  <8.175376, 0.437276>,
  <8.179931, 0.439823>,
  <8.181737, 0.445165>,
  <8.179548, 0.458472>,
  <8.1762, 0.462612>,
  <8.170986, 0.463675>,
  <8.085614, 0.448872>,
  <8.077041, 0.447064>,
  <8.069967, 0.444734>,
  <8.062936, 0.439377>,
  <8.057507, 0.432489>,
  <8.054647, 0.424551>,
  <8.052663, 0.415736>,
  <8.052019, 0.007049>,
  <8.061042, -0.009941>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  16.0*z
}
#declare NaseFT10_Ref = object {
  N0__GLOBAL_
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.867>
  translate  <2.02, 0.0, 15.773>
}
#declare FellRingFT1 = union {
  object { RotSwp4 }
  object { NaseFT10_Ref }
  object { // NaseFT11 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { // NaseFT12 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -72.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT13 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT14 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -144.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // NaseFT15 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  0.0*x
  }
  object { // NaseFT16 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 144.0*z
    translate  0.0*x
  }
  object { // NaseFT17 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 108.0*z
  }
  object { // NaseFT18 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 72.0*z
  }
  object { // NaseFT19 -> NaseFT
    NaseFT_Ref
    photons {
      collect off
    }
    rotate 36.0*z
    translate  0.0*y
  }
  photons {
    collect off
  }
}
#declare HeadRingB_FT1 = union {
  object { SpannElementA_FT1 }
  object { FellRingFT1 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate -180.0*x
  translate  16.014*z
}
#declare ALUform5 = lathe {
  linear_spline
  29  // control points
  <8.024703, 15.953909>,
  <8.024788, 15.823672>,
  <8.031396, 15.80254>,
  <8.044816, 15.789825>,
  <8.060841, 15.785503>,
  <8.174965, 15.785705>,
  <8.188775, 15.789579>,
  <8.203015, 15.800256>,
  <8.211406, 15.823704>,
  <8.211467, 15.952879>,
  <8.21235, 15.956436>,
  <8.2159, 15.958213>,
  <8.22771, 15.956157>,
  <8.231167, 15.954314>,
  <8.232181, 15.950174>,
  <8.232214, 15.821132>,
  <8.228033, 15.805353>,
  <8.219056, 15.787176>,
  <8.205224, 15.774572>,
  <8.187319, 15.766767>,
  <8.056209, 15.766178>,
  <8.033067, 15.772764>,
  <8.019519, 15.781749>,
  <8.011737, 15.795078>,
  <8.005152, 15.821466>,
  <8.005167, 15.952519>,
  <8.006844, 15.956854>,
  <8.011352, 15.957645>,
  <8.024691, 15.953922>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
}
#declare PVCform5 = lathe {
  linear_spline
  17  // control points
  <0.000002, 15.993602>,
  <7.999859, 15.993483>,
  <8.025797, 15.955427>,
  <8.026354, 15.825178>,
  <8.032961, 15.804046>,
  <8.046381, 15.791331>,
  <8.062407, 15.787009>,
  <8.174678, 15.787275>,
  <8.188489, 15.791148>,
  <8.202728, 15.801826>,
  <8.211119, 15.825274>,
  <8.211121, 15.959003>,
  <8.181946, 15.945579>,
  <8.060663, 15.94802>,
  <8.035334, 15.96154>,
  <8.005196, 16.001383>,
  <0.000002, 16.001602>
  rotate <90,0,90>
  material {
    Plastik_Fell_Other
  }
  photons {
    collect off
  }
}
#declare Fell6 = union {
  object { ALUform5 }
  object { PVCform5 }
  photons {
    collect off
  }
  rotate 180.0*x
  translate  15.995*z
}
#declare BockBD1_Ref = object {
  Bock
  photons {
    collect off
  }
  scale <1.28, 1.08, 1.08>
  rotate -180.0*x
  translate  <8.96, 0.0, 2.0>
}
#declare BlechBD1_Ref = object {
  BLECH
  photons {
    collect off
  }
  translate  <8.96, 0.0, 5.2>
}
#declare StandBock = union {
  object { BockBD1_Ref }
  object { BlechBD1_Ref }
  photons {
    collect off
  }
}
#declare RotSwp006 = lathe {
  linear_spline
  9  // control points
  <0.000281, -4.02686>,
  <0.235413, -4.026653>,
  <0.405139, -3.96503>,
  <0.334657, -2.880043>,
  <0.323143, -2.842789>,
  <0.301851, -2.823026>,
  <0.275016, -2.807583>,
  <0.237656, -2.79983>,
  <0.200297, -2.799737>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  9.95*x
}
#declare StandBein = union {
  cylinder { // Cylndr009
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 14.0>
    translate  8.95*x
  }
  sphere { // Sphere003
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  8.95*x
  }
  cylinder { // Cylndr010
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate <0.0, 30.0, -180.0>
    translate  8.95*x
  }
  sphere { // Sphere004
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  <9.95, 0.0, -1.732>
  }
  cylinder { // Cylndr011
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate -180.0*z
    translate  <9.95, 0.0, -1.732>
  }
  object { RotSwp006 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -6.67*z
}
#declare Bein1 = union {
  object { StandBock }
  object { StandBein }
  photons {
    collect off
  }
  rotate 18.0*z
}
#declare BockBD2_Ref = object {
  Bock
  photons {
    collect off
  }
  scale <1.28, 1.08, 1.08>
  rotate -180.0*x
  translate  <8.96, 0.0, 2.0>
}
#declare BlechBD2_Ref = object {
  BLECH
  photons {
    collect off
  }
  translate  <8.96, 0.0, 5.2>
}
#declare StandBock1 = union {
  object { BockBD2_Ref }
  object { BlechBD2_Ref }
  photons {
    collect off
  }
}
#declare RotSwp24 = lathe {
  linear_spline
  9  // control points
  <0.000281, -4.02686>,
  <0.235413, -4.026653>,
  <0.405139, -3.96503>,
  <0.334657, -2.880043>,
  <0.323143, -2.842789>,
  <0.301851, -2.823026>,
  <0.275016, -2.807583>,
  <0.237656, -2.79983>,
  <0.200297, -2.799737>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  9.95*x
}
#declare StandBein1 = union {
  cylinder { // Cylndr135
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 14.0>
    translate  8.95*x
  }
  sphere { // Sphere5
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  8.95*x
  }
  cylinder { // Cylndr136
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate <0.0, 30.0, -180.0>
    translate  8.95*x
  }
  sphere { // Sphere6
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  <9.95, 0.0, -1.732>
  }
  cylinder { // Cylndr137
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate -180.0*z
    translate  <9.95, 0.0, -1.732>
  }
  object { RotSwp24 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -6.67*z
}
#declare Bein2 = union {
  object { StandBock1 }
  object { StandBein1 }
  photons {
    collect off
  }
  rotate 154.0*z
}
#declare BockBD3_Ref = object {
  Bock
  photons {
    collect off
  }
  scale <1.28, 1.08, 1.08>
  rotate -180.0*x
  translate  <8.96, 0.0, 2.0>
}
#declare BlechBD3_Ref = object {
  BLECH
  photons {
    collect off
  }
  translate  <8.96, 0.0, 5.2>
}
#declare StandBock2 = union {
  object { BockBD3_Ref }
  object { BlechBD3_Ref }
  photons {
    collect off
  }
}
#declare RotSwp25 = lathe {
  linear_spline
  9  // control points
  <0.000281, -4.02686>,
  <0.235413, -4.026653>,
  <0.405139, -3.96503>,
  <0.334657, -2.880043>,
  <0.323143, -2.842789>,
  <0.301851, -2.823026>,
  <0.275016, -2.807583>,
  <0.237656, -2.79983>,
  <0.200297, -2.799737>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  9.95*x
}
#declare StandBein2 = union {
  cylinder { // Cylndr138
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 14.0>
    translate  8.95*x
  }
  sphere { // Sphere7
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  8.95*x
  }
  cylinder { // Cylndr139
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate <0.0, 30.0, -180.0>
    translate  8.95*x
  }
  sphere { // Sphere8
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.2
    translate  <9.95, 0.0, -1.732>
  }
  cylinder { // Cylndr140
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <-0.2, -0.2, -2.0>
    rotate -180.0*z
    translate  <9.95, 0.0, -1.732>
  }
  object { RotSwp25 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -6.67*z
}
#declare Bein3 = union {
  object { StandBock2 }
  object { StandBein2 }
  photons {
    collect off
  }
  rotate -118.0*z
}
#declare Stands = union {
  object { Bein1 }
  object { Bein2 }
  object { Bein3 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare FloorTom = union {
  object { DrumTube_FT }
  object { HeadRingA_FT }
  object { Fell5 }
  object { HeadRingB_FT1 }
  object { Fell6 }
  object { Stands }
  photons {
    collect off
  }
  translate  <-14.977734, 29.090542, 0.0>
}
#declare RotSwp6 = lathe {
  linear_spline
  8  // control points
  <-0.001565, 0.334898>,
  <0.302428, 0.335403>,
  <0.600765, 0.302867>,
  <0.891957, 0.249033>,
  <1.078331, 0.202113>,
  <1.109434, 0.177534>,
  <1.123627, 0.142707>,
  <1.123618, 0.00939>
  rotate <90,0,90>
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare RotSwp7 = lathe {
  linear_spline
  8  // control points
  <-0.000001, 0.445776>,
  <0.139159, 0.438844>,
  <0.287828, 0.39346>,
  <0.373759, 0.348799>,
  <0.379316, 0.34314>,
  <0.382449, 0.336791>,
  <0.380029, 0.331764>,
  <0.374057, 0.330075>
  rotate <90,0,90>
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare CSG30 = difference {
  cylinder { // Cylndr26
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 1.8>
    translate  -1.8*z
  }
  cylinder { // Cylndr27
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.2, 1.2, 0.4>
    rotate 90.0*x
  }
  photons {
    collect off
  }
  translate  0.0*y
}
#declare CSG50 = union {
  object { RotSwp6 }
  object { RotSwp7 }
  object { CSG30 }
  cylinder { // Cylndr007
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.32, 0.32, 15.4>
    translate  <0.0, 0.0, -16.7>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  46.0*z
}
#declare RotSwp004 = lathe {
  linear_spline
  8  // control points
  <-0.001565, -0.334898>,
  <0.303805, -0.335023>,
  <0.600629, -0.300963>,
  <0.881785, -0.253316>,
  <1.087354, -0.198287>,
  <1.116794, -0.181739>,
  <1.123602, -0.15308>,
  <1.123486, -0.011099>
  rotate <90,0,90>
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare CSG31 = difference {
  cylinder { // Cylndr36
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 1.8>
  }
  cylinder { // Cylndr37
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.2, 1.2, 0.4>
    rotate -90.0*x
  }
  photons {
    collect off
  }
  translate  -0.0*y
}
#declare Tighten_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate <-90.0, -20.0, 0.0>
  translate  -0.35*y
}
#declare CSG014 = union {
  object { RotSwp004 }
  cylinder { // Cylndr38
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.1, 0.1, 1.8>
    translate  1.0*z
  }
  object { CSG31 }
  object { Tighten_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare Zymbal = lathe {
  linear_spline
  44  // control points
  <0.197929, 2.16759>,
  <0.414567, 2.161413>,
  <0.616473, 2.118405>,
  <0.816955, 2.056222>,
  <1.027061, 1.971271>,
  <1.198424, 1.858984>,
  <1.340925, 1.7403>,
  <1.462463, 1.669743>,
  <1.597367, 1.601873>,
  <1.80007, 1.509781>,
  <2.022986, 1.451448>,
  <2.215828, 1.412878>,
  <5.970754, 1.06575>,
  <7.119608, 0.928977>,
  <8.202417, 0.766133>,
  <8.63196, 0.685567>,
  <9.06613, 0.580082>,
  <9.506512, 0.457499>,
  <9.979972, 0.301086>,
  <9.99043, 0.302575>,
  <9.997206, 0.309311>,
  <9.999877, 0.32037>,
  <9.997396, 0.330143>,
  <9.988746, 0.337522>,
  <9.52017, 0.493175>,
  <9.087014, 0.615991>,
  <8.646479, 0.725107>,
  <8.217239, 0.809234>,
  <7.134732, 0.968843>,
  <5.986248, 1.105816>,
  <2.229027, 1.459244>,
  <2.035929, 1.498513>,
  <2.035929, 1.498513>,
  <2.035929, 1.498513>,
  <1.817555, 1.553802>,
  <1.627076, 1.642671>,
  <1.497252, 1.707606>,
  <1.374596, 1.779965>,
  <1.229349, 1.908951>,
  <1.058008, 2.023256>,
  <0.8545, 2.121855>,
  <0.64165, 2.195691>,
  <0.43031, 2.24681>,
  <0.197776, 2.256943>
  rotate <90,0,90>
  material {
    Zymbal_Texture
  }
  photons {
    collect off
  }
}
#declare Tighten4_Ref = object {
  Tighten
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 0.8
  rotate 90.0*z
  translate  2.9*z
}
#declare slewing = union {
  cylinder { // Cylndr39
    <0,0,1>, <0,0,0>, 1 
    material {
      Plastic_1
    }
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.34>
    translate  <0.0, -0.0, 2.247615>
  }
  object { CSG014 }
  object { Zymbal }
  cylinder { // Cylndr008
    <0,0,1>, <0,0,0>, 1 
    material {
      Plastic_1
    }
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.34>
    translate  1.8*z
  }
  object { Tighten4_Ref }
  photons {
    collect off
  }
  rotate -30.0*y
  translate  <0.0, 0.0, 46.0>
}
#declare HighDown = union {
  object { CSG50 }
  object { slewing }
  photons {
    collect off
  }
  rotate -90.0*z
  translate  -14.0*z
}
#declare RotSwp5 = lathe {
  linear_spline
  6  // control points
  <0.30043, -0.500196>,
  <0.399743, -0.5>,
  <0.399602, 0.43196>,
  <0.499833, 0.431812>,
  <0.499904, 0.5>,
  <0.318632, 0.500024>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  36.57*z
}
#declare RotSwp8 = lathe {
  linear_spline
  8  // control points
  <0.40015, -0.500001>,
  <0.452307, -0.499991>,
  <0.490675, -0.491916>,
  <0.522117, -0.473452>,
  <0.545232, -0.439612>,
  <0.550157, -0.399995>,
  <0.550158, 1.000007>,
  <0.400152, 0.999998>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  36.0*z
}
#declare Tighten1_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate -90.0*y
  translate  <1.0, 0.0, 36.5>
}
#declare CSG013 = union {
  superellipsoid { // SuperQ2
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.15, 0.3, 0.5>
    translate  <0.6, 0.0, 36.5>
  }
  object { RotSwp8 }
  cylinder { // Cylndr006
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.4, 0.4, 20.0>
    translate  16.0*z
  }
  object { Tighten1_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare Midd = union {
  object { RotSwp5 }
  object { CSG013 }
  photons {
    collect off
  }
  translate  -10.0*z
}
#declare CSG003 = difference {
  cylinder { // Cylndr002
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr001
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  box { // Cube002
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    translate  <0.0, 0.55, 0.3>
  }
  box { // Cube7
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    rotate -120.0*z
    translate  <0.476314, -0.275, 0.3>
  }
  box { // Cube8
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    rotate 120.0*z
    translate  <-0.476314, -0.275, 0.3>
  }
  photons {
    collect off
  }
}
#declare CSG004 = union {
  object { CSG003 }
  object { CSG2 }
  object { // CSG3 -> CSG2
    CSG2
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG4 -> CSG2
    CSG2
    photons {
      collect off
    }
    rotate 120.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { CSG5 }
  object { // CSG6 -> CSG5
    CSG5
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG7 -> CSG5
    CSG5
    photons {
      collect off
    }
    rotate 120.0*z
    translate  -0.0*y
  }
  photons {
    collect off
  }
  translate  18.0*z
}
#declare CSG8 = difference {
  cylinder { // Cylndr3
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr6
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  box { // Cube3
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    translate  <0.0, 0.55, 0.3>
  }
  box { // Cube9
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    rotate -120.0*z
    translate  <0.476314, -0.275, 0.3>
  }
  box { // Cube10
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.22, 0.15, 0.32>
    rotate 120.0*z
    translate  <-0.476314, -0.275, 0.3>
  }
  photons {
    collect off
  }
}
#declare CSG9 = union {
  cylinder { // Cylndr7
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube4
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr8
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus4
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.25, 0.03, 0.0>
}
#declare CSG12 = union {
  cylinder { // Cylndr9
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube5
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr22
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus5
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.25, 0.03, 0.0>
}
#declare CSG005 = union {
  object { CSG8 }
  object { CSG9 }
  object { // CSG10 -> CSG2
    CSG2
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG11 -> CSG2
    CSG2
    photons {
      collect off
    }
    rotate 120.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { CSG12 }
  object { // CSG13 -> CSG5
    CSG5
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG28 -> CSG5
    CSG5
    photons {
      collect off
    }
    rotate 120.0*z
    translate  -0.0*y
  }
  photons {
    collect off
  }
}
#declare RotSwp002 = lathe {
  linear_spline
  8  // control points
  <0.499998, -0.500001>,
  <0.552156, -0.499991>,
  <0.590524, -0.491916>,
  <0.621966, -0.473452>,
  <0.645081, -0.439612>,
  <0.650006, -0.399995>,
  <0.650006, 1.000007>,
  <0.500001, 0.999998>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  20.0*z
}
#declare Tighten2_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate -90.0*y
  translate  <1.1, 0.0, 20.5>
}
#declare Tighten3_Ref = object {
  Tighten
  photons {
    collect off
  }
  rotate -90.0*x
  translate  <0.0, -1.0, 0.29>
}
#declare CSG002 = union {
  cylinder { // Cylndr005
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.5, 0.5, 20.0>
  }
  object { CSG004 }
  object { CSG005 }
  superellipsoid { // SuperQ001
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.15, 0.3, 0.5>
    translate  <0.652004, 0.0, 20.499474>
  }
  object { RotSwp002 }
  object { Tighten2_Ref }
  object { Tighten3_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp003 = lathe {
  linear_spline
  6  // control points
  <0.400524, -0.500196>,
  <0.499838, -0.5>,
  <0.499696, 0.43196>,
  <0.599928, 0.431812>,
  <0.599998, 0.5>,
  <0.418727, 0.500175>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  20.57*z
}
#declare Low = union {
  object { CSG011 }
  object { // CSG26 -> CSG011
    CSG011
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG27 -> CSG011
    CSG011
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { RotSwp9 }
  object { // RotSwp10 -> RotSwp9
    RotSwp9
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
    translate  <-0.0, 0.0, 0.0>
  }
  object { // RotSwp11 -> RotSwp9
    RotSwp9
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { CSG002 }
  object { RotSwp003 }
  photons {
    collect off
  }
}
#declare ZymbStand = union {
  object { HighDown }
  object { Midd }
  object { Low }
  photons {
    collect off
  }
  rotate -51.0*z
  translate  <-15.81137, 15.719972, -5.57>
}
#declare CSG37 = union {
  cylinder { // Cylndr24
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.45, 0.45, 1.6>
  }
  cylinder { // Cylndr25
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.25, 0.25, 1.6>
    translate  -1.5*z
  }
  photons {
    collect off
  }
}
#declare CSG41 = difference {
  object { CSG37 }
  cylinder { // Cylndr40
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.15, 0.15, 3.2>
    translate  -1.55*z
  }
  photons {
    collect off
  }
}
#declare Tighten7_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate <0.0, -90.0, -90.0>
  translate  <0.0, -0.7, 1.0>
}
#declare CSG85 = union {
  object { CSG41 }
  object { Tighten7_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  25.0*z
}
#declare B_Top = lathe {
  linear_spline
  44  // control points
  <0.197929, 2.16759>,
  <0.414567, 2.161413>,
  <0.616473, 2.118405>,
  <0.816955, 2.056222>,
  <1.027061, 1.971271>,
  <1.198424, 1.858984>,
  <1.340925, 1.7403>,
  <1.462463, 1.669743>,
  <1.597367, 1.601873>,
  <1.80007, 1.509781>,
  <2.022986, 1.451448>,
  <2.215828, 1.412878>,
  <5.970754, 1.06575>,
  <7.119608, 0.928977>,
  <8.202417, 0.766133>,
  <8.626207, 0.668309>,
  <9.048873, 0.545566>,
  <9.460492, 0.376963>,
  <9.910942, 0.15152>,
  <9.9214, 0.153009>,
  <9.928175, 0.159745>,
  <9.930846, 0.170804>,
  <9.928366, 0.180577>,
  <9.919716, 0.187956>,
  <9.47415, 0.41264>,
  <9.069757, 0.581476>,
  <8.640727, 0.707849>,
  <8.217239, 0.809234>,
  <7.134732, 0.968843>,
  <5.986248, 1.105816>,
  <2.229027, 1.459244>,
  <2.035929, 1.498513>,
  <2.035929, 1.498513>,
  <2.035929, 1.498513>,
  <1.817555, 1.553802>,
  <1.627076, 1.642671>,
  <1.497252, 1.707606>,
  <1.374596, 1.779965>,
  <1.229349, 1.908951>,
  <1.058008, 2.023256>,
  <0.8545, 2.121855>,
  <0.64165, 2.195691>,
  <0.43031, 2.24681>,
  <0.197776, 2.256943>
  rotate <90,0,90>
  material {
    Zymbal_Texture
    translate <0.000000, 0.000000, 0.224711>
  }
  photons {
    collect off
  }
  scale 0.7
  translate  23.14*z
}
#declare Top1 = union {
  object { CSG85 }
  cylinder { // Cylndr50
    <0,0,1>, <0,0,0>, 1 
    material {
      Black_White_Cow
    }
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.34>
    translate  24.66*z
  }
  object { B_Top }
  photons {
    collect off
  }
  translate  5.0*z
}
#declare CSG89 = union {
  cylinder { // Cylndr86
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.42, 0.42, 20.0>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp18 = lathe {
  linear_spline
  18  // control points
  <0.420085, -1.0>,
  <0.420085, -1.0>,
  <0.420085, -1.0>,
  <0.49969, -0.999981>,
  <0.498323, -0.284163>,
  <0.998245, -0.110137>,
  <0.974064, -0.029246>,
  <0.963421, -0.011366>,
  <0.942393, -0.000518>,
  <0.914812, -0.00371>,
  <0.894893, -0.017958>,
  <0.881625, -0.043381>,
  <0.701562, -0.091815>,
  <0.560215, -0.129853>,
  <0.413719, -0.144021>,
  <0.170595, -0.150004>,
  <0.170022, 0.50002>,
  <0.119926, 0.500001>
  rotate <90,0,90>
  material {
    White_Plast
  }
  photons {
    collect off
  }
  translate  20.5*z
}
#declare B_Bottom = lathe {
  linear_spline
  44  // control points
  <0.197929, -2.16759>,
  <0.414567, -2.161413>,
  <0.616473, -2.118405>,
  <0.816955, -2.056222>,
  <1.027061, -1.971271>,
  <1.198424, -1.858984>,
  <1.340925, -1.7403>,
  <1.462463, -1.669743>,
  <1.597367, -1.601873>,
  <1.80007, -1.509781>,
  <2.022986, -1.451448>,
  <2.215828, -1.412878>,
  <5.970754, -1.06575>,
  <7.119608, -0.928977>,
  <8.202417, -0.766133>,
  <8.626207, -0.668309>,
  <9.048873, -0.545566>,
  <9.460492, -0.376963>,
  <9.910942, -0.15152>,
  <9.9214, -0.153009>,
  <9.928175, -0.159745>,
  <9.930846, -0.170804>,
  <9.928366, -0.180577>,
  <9.919716, -0.187956>,
  <9.47415, -0.41264>,
  <9.069757, -0.581476>,
  <8.640727, -0.707849>,
  <8.217239, -0.809234>,
  <7.134732, -0.968843>,
  <5.986248, -1.105816>,
  <2.229027, -1.459244>,
  <2.035929, -1.498513>,
  <2.035929, -1.498513>,
  <2.035929, -1.498513>,
  <1.817555, -1.553802>,
  <1.627076, -1.642671>,
  <1.497252, -1.707606>,
  <1.374596, -1.779965>,
  <1.229349, -1.908951>,
  <1.058008, -2.023256>,
  <0.8545, -2.121855>,
  <0.64165, -2.195691>,
  <0.43031, -2.24681>,
  <0.197776, -2.256943>
  rotate <90,0,90>
  material {
    Zymbal_Texture
    translate <0.000000, 0.000000, -2.300000>
  }
  photons {
    collect off
  }
  scale 0.7
  translate  22.0*z
}
#declare RotSwp005 = lathe {
  linear_spline
  6  // control points
  <0.201878, -0.616588>,
  <1.037559, -0.484351>,
  <0.967136, -0.266823>,
  <0.846244, -0.380477>,
  <0.578834, -0.480536>,
  <0.194053, -0.57277>
  rotate <90,0,90>
  material {
    Black_White_Cow
  }
  photons {
    collect off
  }
  translate  21.0*z
}
#declare Midd1 = union {
  object { CSG89 }
  object { RotSwp18 }
  object { B_Bottom }
  object { RotSwp005 }
  photons {
    collect off
  }
  translate  5.5*z
}
#declare CSG102 = difference {
  cylinder { // Cylndr96
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr97
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.505, 0.505, 0.62>
    translate  -0.01*z
  }
  object { Cube54 }
  object { // Cube55 -> Cube54
    Cube54
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
  }
  object { // Cube56 -> Cube54
    Cube54
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  0.0*x
  }
  photons {
    collect off
  }
}
#declare CSG109 = union {
  object { CSG102 }
  object { CSG103 }
  object { // CSG104 -> CSG103
    CSG103
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG105 -> CSG103
    CSG103
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG106 }
  object { // CSG107 -> CSG106
    CSG106
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG108 -> CSG106
    CSG106
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  photons {
    collect off
  }
}
#declare RotSwp22 = lathe {
  linear_spline
  8  // control points
  <0.499998, -0.500001>,
  <0.552156, -0.499991>,
  <0.590524, -0.491916>,
  <0.621966, -0.473452>,
  <0.645081, -0.439612>,
  <0.650006, -0.399995>,
  <0.650006, 1.000007>,
  <0.500001, 0.999998>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  15.0*z
}
#declare CSG110 = difference {
  cylinder { // Cylndr102
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr103
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.505, 0.505, 0.62>
    translate  -0.01*z
  }
  object { Cube59 }
  object { // Cube60 -> Cube59
    Cube59
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
    translate  -12.6*z
  }
  object { // Cube61 -> Cube59
    Cube59
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  <0.0, 0.0, -12.6>
  }
  photons {
    collect off
  }
}
#declare CSG111 = union {
  cylinder { // Cylndr104
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube62
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr105
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus9
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.05, 0.0>
}
#declare CSG114 = union {
  cylinder { // Cylndr106
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube63
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr107
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus10
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.05, 0.0>
}
#declare CSG117 = union {
  object { CSG110 }
  object { CSG111 }
  object { // CSG112 -> CSG103
    CSG103
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG113 -> CSG103
    CSG103
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG114 }
  object { // CSG115 -> CSG106
    CSG106
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG116 -> CSG106
    CSG106
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  photons {
    collect off
  }
  translate  12.6*z
}
#declare Tighten8_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate -90.0*x
  translate  <0.0, -1.0, 0.32>
}
#declare Tighten9_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate <-90.0, 0.0, 90.0>
  translate  <1.0, 0.0, 15.6>
}
#declare CSG118 = union {
  cylinder { // Cylndr95
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.5, 0.5, 15.0>
  }
  object { CSG109 }
  superellipsoid { // SuperQ4
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.15, 0.3, 0.5>
    translate  <0.652004, 0.0, 15.5>
  }
  object { RotSwp22 }
  object { CSG117 }
  object { Tighten8_Ref }
  object { Tighten9_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp23 = lathe {
  linear_spline
  6  // control points
  <0.400524, -0.500196>,
  <0.499838, -0.5>,
  <0.499696, 0.43196>,
  <0.599928, 0.431812>,
  <0.599998, 0.5>,
  <0.418727, 0.500175>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  15.57*z
}
#declare BezPtch5 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.572653, 0.002194, -1.364938>, <-0.572653, -0.998866, -1.363617>, <-0.572332, -2.216488, -1.363617>, <-0.004477, -2.216488, -1.363617>, 
      <-0.572653, 0.002194, -0.663555>, <-0.572653, -0.998866, -0.663555>, <-0.572332, -2.212453, -0.663555>, <-0.004477, -2.212453, -0.663555>, 
      <-0.572653, 0.002194, -0.173917>, <-0.572653, -0.998866, -0.173917>, <-0.572332, -2.117726, -0.164642>, <-0.004477, -2.117726, -0.164642>, 
      <-0.493740, 0.000000, 0.000069>, <-0.493740, -0.268008, 0.000069>, <-0.271557, -0.487288, 0.000069>, <0.000000, -0.487288, 0.000069>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.004477, -2.216488, -1.363617>, <0.563377, -2.216488, -1.363617>, <0.564762, -0.998866, -1.363617>, <0.564762, 0.002194, -1.364938>, 
      <-0.004477, -2.212453, -0.663555>, <0.563377, -2.212453, -0.663555>, <0.564762, -0.998866, -0.663555>, <0.564762, 0.002194, -0.663555>, 
      <-0.004477, -2.117726, -0.164642>, <0.563377, -2.117726, -0.164642>, <0.564762, -0.998866, -0.173917>, <0.564762, 0.002194, -0.173917>, 
      <0.000000, -0.487288, 0.000069>, <0.271557, -0.487288, 0.000069>, <0.493740, -0.268008, 0.000069>, <0.493740, 0.000000, 0.000069>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.564762, 0.002194, -1.364938>, <0.564762, 1.003254, -1.366259>, <0.563377, 2.191722, -1.366259>, <-0.003946, 2.191722, -1.366259>, 
      <0.564762, 0.002194, -0.663555>, <0.564762, 1.003254, -0.663555>, <0.563377, 2.191722, -0.663555>, <-0.003946, 2.191722, -0.663555>, 
      <0.564762, 0.002194, -0.173917>, <0.564762, 1.003254, -0.173917>, <0.563377, 2.113741, -0.164642>, <-0.003946, 2.113741, -0.164642>, 
      <0.493740, 0.000000, 0.000069>, <0.493740, 0.268008, 0.000069>, <0.271557, 0.487288, 0.000069>, <0.000000, 0.487288, 0.000069>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-0.003946, 2.191722, -1.366259>, <-0.571269, 2.191722, -1.366259>, <-0.572653, 1.003254, -1.366259>, <-0.572653, 0.002194, -1.364938>, 
      <-0.003946, 2.191722, -0.663555>, <-0.571269, 2.191722, -0.663555>, <-0.572653, 1.003254, -0.663555>, <-0.572653, 0.002194, -0.663555>, 
      <-0.003946, 2.113741, -0.164642>, <-0.571269, 2.113741, -0.164642>, <-0.572653, 1.003254, -0.173917>, <-0.572653, 0.002194, -0.173917>, 
      <0.000000, 0.487288, 0.000069>, <-0.271557, 0.487288, 0.000069>, <-0.493740, 0.268008, 0.000069>, <-0.493740, 0.000000, 0.000069>
    }
  }
  photons {
    collect off
  }
}
#declare CSG119 = union {
  object { BezPtch5 }
  cylinder { // Cylndr108
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.52, 0.56, 0.56>
    translate  -0.2*z
  }
  cylinder { // Cylndr109
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.25, 0.25, 6.0>
    translate  <0.0, 1.8, -7.2>
  }
  cylinder { // Cylndr110
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.25, 0.25, 6.0>
    translate  <0.0, -1.8, -7.2>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  -0.4*z
}
#declare FPedal = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  29  // control points
  <-3.998849, -2.005798>,
  <-3.21591, -1.930575>,
  <-2.53143, -1.741123>,
  <-2.006567, -1.49256>,
  <-1.455243, -1.091316>,
  <-0.500501, -0.401008>,
  <-0.000501, -0.401008>,
  <-0.000501, 0.398992>,
  <-0.500501, 0.398992>,
  <-1.542245, 1.124219>,
  <-2.06296, 1.475203>,
  <-2.601087, 1.773948>,
  <-3.280375, 1.940038>,
  <-3.994489, 2.053889>,
  <-4.704081, 1.949976>,
  <-5.378847, 1.776411>,
  <-5.941823, 1.539735>,
  <-6.499559, 1.099905>,
  <-10.000342, 1.100229>,
  <-10.000009, 0.700017>,
  <-9.40001, 0.700027>,
  <-9.400803, -0.70013>,
  <-10.000013, -0.700003>,
  <-10.000086, -1.099992>,
  <-6.500848, -1.099915>,
  <-5.943784, -1.524292>,
  <-5.37463, -1.796531>,
  <-4.783664, -1.941447>,
  <-3.998849, -2.005798>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.4>
  translate  -0.2*z
}
#declare CSG120 = union {
  cylinder { // Cylndr111
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.8>
    rotate -90.0*x
    translate  -0.4*y
  }
  object { FPedal }
  cylinder { // Cylndr112
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.4>
    rotate -90.0*x
    translate  <-10.0, -1.1, 0.0>
  }
  cylinder { // Cylndr113
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.4>
    rotate -90.0*x
    translate  <-10.0, 0.7, 0.0>
  }
  photons {
    collect off
  }
}
#declare FPedalA = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <-1.437818, 1.233365>,
  <-1.680252, 1.10391>,
  <-1.90738, 0.951919>,
  <-2.01594, 0.863854>,
  <-2.024458, 0.848619>,
  <-2.025424, 0.830925>,
  <-2.015916, 0.815356>,
  <-2.000906, 0.809961>,
  <-1.52312, 0.809509>,
  <-1.277377, 0.942529>,
  <-1.042103, 1.047258>,
  <-0.806829, 1.116116>,
  <-0.585608, 1.162698>,
  <-0.369258, 1.180871>,
  <-0.192244, 1.185096>,
  <-0.192244, 1.491004>,
  <-0.419161, 1.48713>,
  <-0.680976, 1.455831>,
  <-0.949967, 1.401058>,
  <-1.190679, 1.338461>,
  <-1.437818, 1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalB = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <1.437818, 1.233365>,
  <1.680252, 1.10391>,
  <1.90738, 0.951919>,
  <2.01594, 0.863854>,
  <2.024458, 0.848619>,
  <2.025424, 0.830925>,
  <2.015916, 0.815356>,
  <2.000906, 0.809961>,
  <1.52312, 0.809509>,
  <1.277377, 0.942529>,
  <1.042103, 1.047258>,
  <0.806829, 1.116116>,
  <0.585608, 1.162698>,
  <0.369258, 1.180871>,
  <0.192244, 1.185096>,
  <0.192244, 1.491004>,
  <0.419161, 1.48713>,
  <0.680976, 1.455831>,
  <0.949967, 1.401058>,
  <1.190679, 1.338461>,
  <1.437818, 1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalC = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <1.437818, -1.233365>,
  <1.680252, -1.10391>,
  <1.90738, -0.951919>,
  <2.01594, -0.863854>,
  <2.024458, -0.848619>,
  <2.025424, -0.830925>,
  <2.015916, -0.815356>,
  <2.000906, -0.809961>,
  <1.52312, -0.809509>,
  <1.277377, -0.942529>,
  <1.042103, -1.047258>,
  <0.806829, -1.116116>,
  <0.585608, -1.162698>,
  <0.369258, -1.180871>,
  <0.192244, -1.185096>,
  <0.192244, -1.491004>,
  <0.419161, -1.48713>,
  <0.680976, -1.455831>,
  <0.949967, -1.401058>,
  <1.190679, -1.338461>,
  <1.437818, -1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare FPedalD = prism {
  linear_sweep
  linear_spline
  -1.0,0.0
  21  // control points
  <-1.437818, -1.233365>,
  <-1.680252, -1.10391>,
  <-1.90738, -0.951919>,
  <-2.01594, -0.863854>,
  <-2.024458, -0.848619>,
  <-2.025424, -0.830925>,
  <-2.015916, -0.815356>,
  <-2.000906, -0.809961>,
  <-1.52312, -0.809509>,
  <-1.277377, -0.942529>,
  <-1.042103, -1.047258>,
  <-0.806829, -1.116116>,
  <-0.585608, -1.162698>,
  <-0.369258, -1.180871>,
  <-0.192244, -1.185096>,
  <-0.192244, -1.491004>,
  <-0.419161, -1.48713>,
  <-0.680976, -1.455831>,
  <-0.949967, -1.401058>,
  <-1.190679, -1.338461>,
  <-1.437818, -1.233365>
  rotate -x*90
  photons {
    collect off
  }
  scale <1.0, 1.0, 0.42>
  translate  <-4.0, 0.0, -0.21>
}
#declare CSG121 = difference {
  object { CSG120 }
  box { // Cube64
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.35, 0.2, 0.22>
  }
  object { FPedalA }
  object { FPedalB }
  object { FPedalC }
  object { FPedalD }
  photons {
    collect off
  }
}
#declare CSG122 = union {
  object { CSG121 }
  box { // Cube65
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-9.0, 0.0, 0.2>
  }
  box { // Cube66
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.7, 0.0, 0.2>
  }
  box { // Cube67
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.4, 0.0, 0.2>
  }
  box { // Cube68
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-8.1, 0.0, 0.2>
  }
  box { // Cube69
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.8, 0.0, 0.2>
  }
  box { // Cube70
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.5, 0.0, 0.2>
  }
  box { // Cube71
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-7.2, 0.0, 0.2>
  }
  box { // Cube72
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.9, 0.0, 0.2>
  }
  box { // Cube73
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.6, 0.0, 0.2>
  }
  box { // Cube74
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.3, 0.0, 0.2>
  }
  box { // Cube75
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-6.0, 0.0, 0.2>
  }
  box { // Cube76
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.7, 0.0, 0.2>
  }
  box { // Cube77
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.4, 0.0, 0.2>
  }
  box { // Cube78
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-5.1, 0.0, 0.2>
  }
  box { // Cube79
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.8, 0.0, 0.2>
  }
  box { // Cube80
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.5, 0.0, 0.2>
  }
  box { // Cube81
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-4.2, 0.0, 0.2>
  }
  box { // Cube82
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.9, 0.0, 0.2>
  }
  box { // Cube83
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.6, 0.0, 0.2>
  }
  box { // Cube84
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.3, 0.0, 0.2>
  }
  box { // Cube85
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-3.0, 0.0, 0.2>
  }
  box { // Cube86
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.7, 0.0, 0.2>
  }
  box { // Cube87
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.4, 0.0, 0.2>
  }
  box { // Cube88
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-2.1, 0.0, 0.2>
  }
  box { // Cube89
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-1.8, 0.0, 0.2>
  }
  box { // Cube90
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.6, 0.04>
    translate  <-1.5, 0.0, 0.2>
  }
  cylinder { // Cylndr114
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 0.8>
    rotate <-90.0, 31.0, 0.0>
    translate  <0.001124, -0.4, 0.001871>
  }
  cylinder { // Cylndr115
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 2.3>
    rotate <-90.0, 25.0, 0.0>
    translate  <-10.009571, -1.150453, -0.001734>
  }
  material {
    Aluminum_1
  }
  photons {
    collect off
  }
  rotate -25.0*y
  translate  <-0.955, 0.0, -4.92>
}
#declare CSG123 = union {
  superellipsoid { // SuperQ5
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.4, 0.5, 1.0>
    translate  <0.0, 1.7, -8.5>
  }
  superellipsoid { // SuperQ6
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.8, 2.5, 0.4>
    translate  <-0.25, 0.0, -9.25>
  }
  superellipsoid { // SuperQ7
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.4, 0.5, 1.0>
    translate  <0.0, -1.7, -8.5>
  }
  photons {
    collect off
  }
}
#declare CSG124 = difference {
  object { CSG123 }
  superellipsoid { // SuperQ002
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.3, 2.0, 0.3>
    translate  <-0.8, 0.0, -9.1>
  }
  material {
    Aluminum_1
  }
  photons {
    collect off
  }
  translate  0.1*z
}
#declare CSG125 = union {
  box { // Cube91
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.8, 1.1, 0.3>
    translate  <-9.6, 0.0, -9.25>
  }
  cylinder { // Cylndr116
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 1.3>
    rotate -90.0*x
    translate  <-8.567819, -0.65, -9.152294>
  }
  box { // Cube003
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.13, 0.65, 0.2>
    translate  <-8.7, 0.0, -9.15177>
  }
  box { // Cube92
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.7, 0.0, -8.933495>
  }
  box { // Cube93
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.4, 0.0, -8.933495>
  }
  box { // Cube94
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-9.1, 0.0, -8.933495>
  }
  box { // Cube95
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.02, 0.8, 0.04>
    translate  <-10.0, 0.0, -8.933495>
  }
  cylinder { // Cylndr117
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.6>
    translate  <-10.4, -0.9, -9.55>
  }
  cylinder { // Cylndr118
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.6>
    translate  <-10.4, 0.9, -9.55>
  }
  box { // Cube96
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.1, 0.9, 0.3>
    translate  <-10.5, 0.0, -9.25>
  }
  photons {
    collect off
  }
  translate  -1.44*x
}
#declare Buegel_Ref = object {
  Buegel
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate 8.0*y
  translate  -2.45*z
}
#declare Draht_Ref = object {
  Draht
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  scale 0.98
  translate  -9.0*z
}
#declare CSG126 = union {
  object { CSG124 }
  object { CSG125 }
  object { Buegel_Ref }
  object { Draht_Ref }
  material {
    Aluminum_1
  }
  photons {
    collect off
  }
}
#declare CSG86 = union {
  cylinder { // Cylndr78
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.2, 0.2, 0.8>
    rotate -90.0*x
    translate  <0.0, -0.4, -2.43389>
  }
  box { // Cube46
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.2, 0.4, 0.22>
    translate  -2.21059*z
  }
  photons {
    collect off
  }
}
#declare CSG87 = difference {
  object { CSG86 }
  box { // Cube49
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.21, 0.2, 0.22>
    translate  -2.42354*z
  }
  photons {
    collect off
  }
}
#declare CSG88 = union {
  object { CSG87 }
  cylinder { // Cylndr79
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.05, 0.05, 0.8>
    rotate -90.0*x
    translate  <0.0, -0.4, -2.43389>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare Low2 = union {
  object { CSG99 }
  object { // CSG100 -> CSG99
    CSG99
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG101 -> CSG99
    CSG99
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { RotSwp19 }
  object { // RotSwp20 -> RotSwp19
    RotSwp19
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
    translate  <-0.0, 0.0, 0.0>
  }
  object { // RotSwp21 -> RotSwp19
    RotSwp19
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { CSG118 }
  object { RotSwp23 }
  object { CSG119 }
  object { CSG122 }
  object { CSG126 }
  cylinder { // Cylndr23
    <0,0,1>, <0,0,0>, 1 
    material {
      Chrome_Textur_Modif
    }
    hollow
    photons {
      collect off
    }
    scale <0.1, 0.1, 35.0>
    translate  -2.0*z
  }
  object { CSG88 }
  photons {
    collect off
  }
}
#declare HiHat = union {
  object { Top1 }
  object { Midd1 }
  object { Low2 }
  photons {
    collect off
  }
  rotate -60.0*z
  translate  <24.684229, 25.342644, -1.1>
}
#declare BezPtch001 = union { 
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <-1.000000, 0.000000, 0.000000>, <-1.000000, -0.550000, 0.000000>, <-0.550000, -1.000000, 0.000000>, <0.000000, -1.000000, 0.000000>, 
      <-1.000000, 0.000000, 0.500000>, <-1.000000, -0.550000, 0.500000>, <-0.550000, -1.000000, 0.500000>, <0.000000, -1.000000, 0.500000>, 
      <-1.000000, 0.000000, 1.000000>, <-1.000000, -0.550000, 1.000000>, <-0.524226, -0.716486, 1.000000>, <-0.004296, -0.716486, 1.000000>, 
      <-1.515481, -0.004296, 1.500000>, <-1.515481, -0.498452, 1.500000>, <-0.490313, -0.493111, 1.288389>, <0.003843, -0.497406, 1.288389>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.000000, -1.000000, 0.000000>, <0.550000, -1.000000, 0.000000>, <1.000000, -0.550000, 0.000000>, <1.000000, 0.000000, 0.000000>, 
      <0.000000, -1.000000, 0.500000>, <0.550000, -1.000000, 0.500000>, <1.000000, -0.550000, 0.500000>, <1.000000, 0.000000, 0.500000>, 
      <-0.004296, -0.716486, 1.000000>, <0.515635, -0.716486, 1.000000>, <1.000000, -0.550000, 1.000000>, <1.000000, 0.000000, 1.000000>, 
      <0.003843, -0.497406, 1.288389>, <0.497999, -0.501702, 1.288389>, <1.489707, -0.498452, 1.500000>, <1.489707, -0.000000, 1.500000>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <1.000000, 0.000000, 0.000000>, <1.000000, 0.550000, 0.000000>, <0.550000, 1.000000, 0.000000>, <0.000000, 1.000000, 0.000000>, 
      <1.000000, 0.000000, 0.500000>, <1.000000, 0.550000, 0.500000>, <0.550000, 1.000000, 0.500000>, <0.000000, 1.000000, 0.500000>, 
      <1.000000, 0.000000, 1.000000>, <1.000000, 0.550000, 1.000000>, <0.524226, 0.733668, 1.000000>, <-0.000000, 0.733668, 1.000000>, 
      <1.489707, -0.000000, 1.500000>, <1.489707, 0.498452, 1.500000>, <0.490313, 0.493111, 1.288389>, <-0.008139, 0.497406, 1.288389>
    }
  }
  object {
    bicubic_patch { type 1 flatness 0.0100 u_steps 3 v_steps 3,
      <0.000000, 1.000000, 0.000000>, <-0.550000, 1.000000, 0.000000>, <-1.000000, 0.550000, 0.000000>, <-1.000000, 0.000000, 0.000000>, 
      <0.000000, 1.000000, 0.500000>, <-0.550000, 1.000000, 0.500000>, <-1.000000, 0.550000, 0.500000>, <-1.000000, 0.000000, 0.500000>, 
      <-0.000000, 0.733668, 1.000000>, <-0.524226, 0.733668, 1.000000>, <-1.000000, 0.550000, 1.000000>, <-1.000000, 0.000000, 1.000000>, 
      <-0.008139, 0.497406, 1.288389>, <-0.506591, 0.501702, 1.288389>, <-1.515481, 0.489861, 1.500000>, <-1.515481, -0.004296, 1.500000>
    }
  }
  photons {
    collect off
  }
  scale <0.4, 0.4, 1.0>
  rotate 90.0*x
  translate  <0.0, 2.25, 0.0>
}
#declare CSG020 = difference {
  cylinder { // Cylndr43
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.0, 1.0, 0.4>
    translate  -0.2*z
  }
  cylinder { // Cylndr44
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.01, 1.01, 0.05>
    translate  0.16*z
  }
  cylinder { // Cylndr45
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.01, 1.01, 0.05>
    translate  -0.21*z
  }
  photons {
    collect off
  }
}
#declare CSG29 = union {
  cylinder { // Cylndr41
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.0, 1.0, 0.4>
    translate  -0.2*z
  }
  cylinder { // Cylndr42
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.42, 0.42, 8.5>
    rotate 90.0*x
    translate  <0.0, 10.0, 0.0>
  }
  object { BezPtch001 }
  object { CSG020 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate -90.0*x
  translate  15.0*z
}
#declare RotSwp12 = lathe {
  linear_spline
  8  // control points
  <-0.000001, 0.423627>,
  <0.139159, 0.412668>,
  <0.287828, 0.367284>,
  <0.373759, 0.322623>,
  <0.379316, 0.316964>,
  <0.382449, 0.310615>,
  <0.380029, 0.305588>,
  <0.374057, 0.303899>
  rotate <90,0,90>
  photons {
    collect off
  }
  rotate -90.0*x
}
#declare CSG36 = difference {
  cylinder { // Cylndr48
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.4, 0.4, 2.0>
    translate  <1.45, 0.0, -1.0>
  }
  cylinder { // Cylndr49
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 2.0>
    translate  <1.45, 0.0, -1.0>
  }
  photons {
    collect off
  }
}
#declare Tighten5_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.9
  rotate <-90.0, -20.0, 0.0>
  translate  -0.3*y
}
#declare CSG42 = union {
  box { // Cube20
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.6, 1.0, 0.05>
    rotate -90.0*x
    translate  <0.6, 0.25, 0.0>
  }
  cylinder { // Cylndr46
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.0, 1.0, 0.1>
    rotate -90.0*x
    translate  0.2*y
  }
  cylinder { // Cylndr47
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.0, 1.0, 0.1>
    rotate -90.0*x
    translate  -0.3*y
  }
  box { // Cube21
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.6, 1.0, 0.05>
    rotate -90.0*x
    translate  <0.6, -0.25, 0.0>
  }
  object { RotSwp12 }
  object { CSG36 }
  object { Tighten5_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare CSG43 = difference {
  cylinder { // Cylndr52
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.4, 0.4, 0.6>
  }
  cylinder { // Cylndr53
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.6>
  }
  photons {
    collect off
  }
  translate  -0.3*z
}
#declare CSG015 = union {
  object { CSG43 }
  object { NaseL3 }
  object { // NaseL4 -> NaseL3
    NaseL3
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // NaseL5 -> NaseL3
    NaseL3
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { NaseR3 }
  object { // NaseR4 -> NaseR3
    NaseR3
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // NaseR5 -> NaseR3
    NaseR3
    photons {
      collect off
    }
    rotate 120.0*z
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare CSG48 = union {
  object { CSG015 }
  object { CSG016 }
  object { // CSG46 -> CSG016
    CSG016
    photons {
      collect off
    }
    rotate <0.0, 0.0, -120.0>
  }
  object { // CSG47 -> CSG016
    CSG016
    photons {
      collect off
    }
    rotate <0.0, 0.0, 120.0>
  }
  photons {
    collect off
  }
  translate  4.7*z
}
#declare CSG52 = difference {
  cylinder { // Cylndr57
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.4, 0.4, 0.6>
    translate  -0.3*z
  }
  cylinder { // Cylndr58
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.6>
    translate  -0.3*z
  }
  photons {
    collect off
  }
}
#declare CSG53 = union {
  object { CSG52 }
  object { NaseL }
  object { // NaseL1 -> NaseL
    NaseL
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // NaseL2 -> NaseL
    NaseL
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { NaseR }
  object { // NaseR1 -> NaseR
    NaseR
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // NaseR2 -> NaseR
    NaseR
    photons {
      collect off
    }
    rotate 120.0*z
  }
  photons {
    collect off
  }
}
#declare CSG54 = union {
  object { CSG012 }
  object { // CSG49 -> CSG012
    CSG012
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG51 -> CSG012
    CSG012
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { CSG53 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  translate  2.4*z
}
#declare CSG017 = difference {
  cylinder { // Cylndr59
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.45, 0.45, 0.6>
  }
  cylinder { // Cylndr60
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.61>
    translate  -0.005*z
  }
  photons {
    collect off
  }
}
#declare CSG019 = union {
  cone { // Cone002
    <0,0,0>, 0.5, <0,0,1>, 1.0
    photons {
      collect off
    }
    scale <0.3, 0.3, 1.0>
  }
  sphere { // Sphere002
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.3
    translate  1.0*z
  }
  photons {
    collect off
  }
  rotate 90.0*y
  translate  <0.4, 0.0, 0.22>
}
#declare CSG55 = union {
  cone { // Cone7
    <0,0,0>, 0.5, <0,0,1>, 1.0
    photons {
      collect off
    }
    scale <0.3, 0.3, 1.0>
  }
  sphere { // Sphere3
    <0,0,0>,1
    photons {
      collect off
    }
    scale 0.3
    translate  1.0*z
  }
  photons {
    collect off
  }
  rotate -90.0*y
  translate  <-0.4, 0.0, 0.22>
}
#declare CSG018 = union {
  object { CSG017 }
  object { CSG019 }
  object { CSG55 }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
  rotate -26.0*z
  translate  1.5*z
}
#declare Greif = union {
  cylinder { // Cylndr51
    <0,0,1>, <0,0,0>, 1 
    material {
      Chrome_Textur_Modif
    }
    photons {
      collect off
    }
    scale <0.3, 0.3, 6.0>
    translate  -1.0*z
  }
  object { CSG48 }
  object { CSG54 }
  object { CSG018 }
  photons {
    collect off
  }
  translate  1.45*x
}
#declare ALUform6 = lathe {
  linear_spline
  29  // control points
  <7.025073, -0.036957>,
  <7.025159, -0.167194>,
  <7.031766, -0.188326>,
  <7.045186, -0.201041>,
  <7.061211, -0.205363>,
  <7.175335, -0.205161>,
  <7.189145, -0.201288>,
  <7.203385, -0.19061>,
  <7.211776, -0.167162>,
  <7.211837, -0.037988>,
  <7.21272, -0.03443>,
  <7.21627, -0.032653>,
  <7.228081, -0.034709>,
  <7.231538, -0.036552>,
  <7.232551, -0.040692>,
  <7.232584, -0.169734>,
  <7.228404, -0.185513>,
  <7.219426, -0.20369>,
  <7.205594, -0.216294>,
  <7.184222, -0.224484>,
  <7.056579, -0.224688>,
  <7.033437, -0.218102>,
  <7.01989, -0.209118>,
  <7.012107, -0.195788>,
  <7.005522, -0.1694>,
  <7.005537, -0.038347>,
  <7.007214, -0.034012>,
  <7.011722, -0.033221>,
  <7.025061, -0.036944>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  translate  0.0*y
}
#declare PVCform6 = lathe {
  linear_spline
  21  // control points
  <-0.000033, 0.050008>,
  <6.970801, 0.050091>,
  <6.992571, 0.04291>,
  <7.000186, 0.020445>,
  <7.025948, -0.037973>,
  <7.026505, -0.168222>,
  <7.033112, -0.189354>,
  <7.046532, -0.202069>,
  <7.062558, -0.206391>,
  <7.17483, -0.206125>,
  <7.18864, -0.202252>,
  <7.202879, -0.191574>,
  <7.21127, -0.168126>,
  <7.211272, -0.034397>,
  <7.182097, -0.047821>,
  <7.060814, -0.04538>,
  <7.035485, -0.03186>,
  <7.008979, 0.024302>,
  <6.998805, 0.050809>,
  <6.974791, 0.058439>,
  <-0.000033, 0.058008>
  rotate <90,0,90>
  material {
    Plastik_Fell_Snare
  }
  photons {
    collect off
  }
}
#declare FellSD = union {
  object { ALUform6 }
  object { PVCform6 }
  photons {
    collect off
  }
  translate  2.8*z
}
#declare Trommel_Kessel = lathe {
  linear_spline
  42  // control points
  <6.696582, -2.798334>,
  <6.945002, -2.850001>,
  <6.969976, -2.850013>,
  <6.980638, -2.848102>,
  <6.990786, -2.842112>,
  <6.997366, -2.831224>,
  <6.999998, -2.820098>,
  <6.999998, -2.820098>,
  <7.0, -0.237119>,
  <6.985329, -0.206232>,
  <6.901298, -0.171204>,
  <6.834023, -0.099939>,
  <6.805753, 0.000123>,
  <6.831434, 0.092872>,
  <6.910654, 0.174071>,
  <6.976359, 0.201659>,
  <6.999994, 0.236757>,
  <7.0, 2.82>,
  <6.992192, 2.84327>,
  <6.970132, 2.850011>,
  <6.940087, 2.849994>,
  <6.699929, 2.750063>,
  <6.706984, 2.73184>,
  <6.945032, 2.830027>,
  <6.97001, 2.830046>,
  <6.977541, 2.827249>,
  <6.979891, 2.819987>,
  <6.980004, 0.243398>,
  <6.963554, 0.217874>,
  <6.899848, 0.1924>,
  <6.808681, 0.099151>,
  <6.782994, 0.000761>,
  <6.813391, -0.108804>,
  <6.890848, -0.191131>,
  <6.971428, -0.222611>,
  <6.979992, -0.245724>,
  <6.979924, -2.819866>,
  <6.97653, -2.828016>,
  <6.969329, -2.831183>,
  <6.946668, -2.831175>,
  <6.701, -2.780395>,
  <6.696483, -2.798516>
  rotate <90,0,90>
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare BockSD = union {
  object { Snare_Bock_Ref }
  object { // Snare_Bock1 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate -36.0*z
  }
  object { // Snare_Bock2 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate -72.0*z
    translate  0.0*y
  }
  object { // Snare_Bock3 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate -108.0*z
    translate  <0.0, 0.0, 0.0>
  }
  object { // Snare_Bock4 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate -144.0*z
    translate  0.0*x
  }
  object { // Snare_Bock5 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate -180.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // Snare_Bock6 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate 144.0*z
    translate  <0.0, -0.0, 0.0>
  }
  object { // Snare_Bock7 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate 108.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // Snare_Bock8 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate 72.0*z
    translate  <-0.0, -0.0, 0.0>
  }
  object { // Snare_Bock9 -> Snare_Bock
    Snare_Bock_Ref
    photons {
      collect off
    }
    rotate 36.0*z
    translate  <-0.0, 0.0, 0.0>
  }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare ALUform7 = lathe {
  linear_spline
  29  // control points
  <7.025073, -0.036957>,
  <7.025159, -0.167194>,
  <7.031766, -0.188326>,
  <7.045186, -0.201041>,
  <7.061211, -0.205363>,
  <7.175335, -0.205161>,
  <7.189145, -0.201288>,
  <7.203385, -0.19061>,
  <7.211776, -0.167162>,
  <7.211837, -0.037988>,
  <7.21272, -0.03443>,
  <7.21627, -0.032653>,
  <7.228081, -0.034709>,
  <7.231538, -0.036552>,
  <7.232551, -0.040692>,
  <7.232584, -0.169734>,
  <7.228404, -0.185513>,
  <7.219426, -0.20369>,
  <7.205594, -0.216294>,
  <7.184222, -0.224484>,
  <7.056579, -0.224688>,
  <7.033437, -0.218102>,
  <7.01989, -0.209118>,
  <7.012107, -0.195788>,
  <7.005522, -0.1694>,
  <7.005537, -0.038347>,
  <7.007214, -0.034012>,
  <7.011722, -0.033221>,
  <7.025061, -0.036944>
  rotate <90,0,90>
  material {
    Aluminum
  }
  photons {
    collect off
  }
  translate  0.0*y
}
#declare PVCform7 = lathe {
  linear_spline
  21  // control points
  <-0.000033, 0.050008>,
  <6.970801, 0.050091>,
  <6.992571, 0.04291>,
  <7.000186, 0.020445>,
  <7.025948, -0.037973>,
  <7.026505, -0.168222>,
  <7.033112, -0.189354>,
  <7.046532, -0.202069>,
  <7.062558, -0.206391>,
  <7.17483, -0.206125>,
  <7.18864, -0.202252>,
  <7.202879, -0.191574>,
  <7.21127, -0.168126>,
  <7.211272, -0.034397>,
  <7.182097, -0.047821>,
  <7.060814, -0.04538>,
  <7.035485, -0.03186>,
  <7.008979, 0.024302>,
  <6.998805, 0.050809>,
  <6.974791, 0.058439>,
  <-0.000033, 0.058008>
  rotate <90,0,90>
  material {
    Plastik_Fell_Snare
  }
  photons {
    collect off
  }
}
#declare FellSD1 = union {
  object { ALUform7 }
  object { PVCform7 }
  photons {
    collect off
  }
  rotate 180.0*x
  translate  -2.8*z
}
#declare SnareDrum = union {
  object { FellRingSD }
  object { FellSD }
  object { Trommel_Kessel }
  object { // FellRingSD1 -> FellRingSD
    FellRingSD
    photons {
      collect off
    }
    rotate 180.0*x
  }
  object { BockSD }
  object { FellSD1 }
  photons {
    collect off
  }
  translate  <1.45, 0.0, 8.7>
}
#declare Slewing = union {
  object { CSG42 }
  object { Greif }
  object { SnareDrum }
  photons {
    collect off
  }
  rotate -20.0*y
  translate  15.0*z
}
#declare CSG021 = union {
  cylinder { // Cylndr61
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.01, 1.01, 0.04>
    rotate -90.0*x
    translate  0.16*y
  }
  cylinder { // Cylndr62
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <1.01, 1.01, 0.04>
    rotate -90.0*x
    translate  -0.2*y
  }
  material {
    Jurit_Texture
  }
  photons {
    collect off
  }
  translate  15.0*z
}
#declare Top = union {
  object { CSG29 }
  object { Slewing }
  object { CSG021 }
  photons {
    collect off
  }
  translate  -1.7*z
}
#declare CSG68 = difference {
  cylinder { // Cylndr72
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr73
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  object { Cube24 }
  object { // Cube42 -> Cube24
    Cube24
    photons {
      collect off
    }
    rotate <0.0, -0.0, -120.0>
  }
  object { // Cube43 -> Cube24
    Cube24
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -240.0>
  }
  photons {
    collect off
  }
}
#declare Tighten6_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate -90.0*x
  translate  <0.0, -1.05, 0.3>
}
#declare CSG75 = union {
  object { CSG68 }
  object { CSG69 }
  object { // CSG70 -> CSG69
    CSG69
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG71 -> CSG69
    CSG69
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG72 }
  object { // CSG73 -> CSG72
    CSG72
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG74 -> CSG72
    CSG72
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { Tighten6_Ref }
  photons {
    collect off
  }
}
#declare RotSwp16 = lathe {
  linear_spline
  8  // control points
  <0.499998, -0.500001>,
  <0.552156, -0.499991>,
  <0.590524, -0.491916>,
  <0.621966, -0.473452>,
  <0.645081, -0.439612>,
  <0.650006, -0.399995>,
  <0.650006, 1.000007>,
  <0.500001, 0.999998>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  10.0*z
}
#declare CSG76 = difference {
  cylinder { // Cylndr80
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr81
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  object { Cube39 }
  object { // Cube44 -> Cube39
    Cube39
    photons {
      collect off
    }
    rotate <-0.0, -0.0, -120.0>
  }
  object { // Cube45 -> Cube39
    Cube39
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -240.0>
  }
  photons {
    collect off
  }
}
#declare CSG77 = union {
  cylinder { // Cylndr82
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube40
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr83
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus32
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.033, 0.0>
}
#declare CSG80 = union {
  cylinder { // Cylndr84
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube41
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr85
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus33
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.033, 0.0>
}
#declare CSG83 = union {
  object { CSG76 }
  object { CSG77 }
  object { // CSG78 -> CSG69
    CSG69
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG79 -> CSG69
    CSG69
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG80 }
  object { // CSG81 -> CSG72
    CSG72
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG82 -> CSG72
    CSG72
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  photons {
    collect off
  }
  translate  7.7*z
}
#declare Tighten14_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate <-90.0, -50.0, -270.0>
  translate  <1.1, 0.0, 10.5>
}
#declare CSG84 = union {
  cylinder { // Cylndr71
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.5, 0.5, 10.0>
  }
  object { CSG75 }
  superellipsoid { // SuperQ3
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.15, 0.3, 0.5>
    translate  <0.652004, 0.0, 10.5>
  }
  object { RotSwp16 }
  object { CSG83 }
  object { Tighten14_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp17 = lathe {
  linear_spline
  6  // control points
  <0.400524, -0.500196>,
  <0.499838, -0.5>,
  <0.499696, 0.43196>,
  <0.599928, 0.431812>,
  <0.599998, 0.5>,
  <0.418727, 0.500175>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  10.57*z
}
#declare Low1 = union {
  object { CSG65 }
  object { // CSG66 -> CSG65
    CSG65
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG67 -> CSG65
    CSG65
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { RotSwp13 }
  object { // RotSwp14 -> RotSwp13
    RotSwp13
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
    translate  <-0.0, 0.0, 0.0>
  }
  object { // RotSwp15 -> RotSwp13
    RotSwp13
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { CSG84 }
  object { RotSwp17 }
  photons {
    collect off
  }
  rotate -30.0*z
}
#declare SnareStand = union {
  object { Top }
  object { Low1 }
  photons {
    collect off
  }
  rotate -90.0*z
  translate  <10.219604, 23.581189, -8.98>
}
#declare CSG146 = union {
  superellipsoid { // SuperQ14
    <1.0, 0.3>
    photons {
      collect off
    }
    scale <6.0, 6.0, 2.0>
    translate  17.0*z
  }
  torus { // Torus8
    5.9, 0.08  rotate -x*90
    material {
      Sit_Texture_1
    }
    photons {
      collect off
    }
    translate  15.5*z
  }
  torus { // Torus13
    5.9, 0.08  rotate -x*90
    material {
      Sit_Texture_1
    }
    photons {
      collect off
    }
    translate  18.5*z
  }
  material {
    Sit_Texture
  }
  photons {
    collect off
  }
}
#declare CSG147 = union {
  cylinder { // Cylndr157
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.52, 0.52, 1.0>
    translate  13.0*z
  }
  cone { // Cone001
    <0,0,0>, 0.54, <0,0,1>, 1.8
    photons {
      collect off
    }
    translate  14.0*z
  }
  cylinder { // Cylndr158
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <5.0, 5.0, 0.05>
    translate  15.0*z
  }
  material {
    Hammerschlag
  }
  photons {
    collect off
  }
}
#declare Top2 = union {
  cylinder { // Cylndr156
    <0,0,1>, <0,0,0>, 1 
    material {
      Chrome_Textur_Modif
    }
    hollow
    photons {
      collect off
    }
    scale <0.42, 0.42, 10.0>
    translate  5.0*z
  }
  object { CSG146 }
  object { CSG147 }
  photons {
    collect off
  }
}
#declare CSG160 = difference {
  cylinder { // Cylndr168
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr169
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  object { Cube146 }
  object { // Cube147 -> Cube146
    Cube146
    photons {
      collect off
    }
    rotate <0.0, -0.0, -120.0>
  }
  object { // Cube148 -> Cube146
    Cube146
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -240.0>
  }
  photons {
    collect off
  }
}
#declare Tighten12_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate -90.0*x
  translate  <0.0, -1.05, 0.3>
}
#declare CSG167 = union {
  object { CSG160 }
  object { CSG161 }
  object { // CSG162 -> CSG161
    CSG161
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG163 -> CSG161
    CSG161
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG164 }
  object { // CSG165 -> CSG164
    CSG164
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG166 -> CSG164
    CSG164
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { Tighten12_Ref }
  photons {
    collect off
  }
}
#declare RotSwp32 = lathe {
  linear_spline
  8  // control points
  <0.499998, -0.500001>,
  <0.552156, -0.499991>,
  <0.590524, -0.491916>,
  <0.621966, -0.473452>,
  <0.645081, -0.439612>,
  <0.650006, -0.399995>,
  <0.650006, 1.000007>,
  <0.500001, 0.999998>
  rotate <90,0,90>
  photons {
    collect off
  }
  translate  10.0*z
}
#declare CSG168 = difference {
  cylinder { // Cylndr174
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.66, 0.66, 0.6>
  }
  cylinder { // Cylndr175
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.5, 0.5, 0.62>
    translate  -0.01*z
  }
  object { Cube151 }
  object { // Cube152 -> Cube151
    Cube151
    photons {
      collect off
    }
    rotate <-0.0, -0.0, -120.0>
  }
  object { // Cube153 -> Cube151
    Cube151
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -240.0>
  }
  photons {
    collect off
  }
}
#declare CSG169 = union {
  cylinder { // Cylndr176
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube154
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr177
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.000108, 0.499536, 0.0>
  }
  torus { // Torus34
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <-0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <-0.17, 0.033, 0.0>
}
#declare CSG172 = union {
  cylinder { // Cylndr178
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.3, 0.3, 0.16>
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  box { // Cube155
    <-1, -1, -1>, <1, 1, 1>
    photons {
      collect off
    }
    scale <0.08, 0.25, 0.3>
    translate  <0.0, 0.75, 0.3>
  }
  cylinder { // Cylndr179
    <0,0,1>, <0,0,0>, 1 
    photons {
      collect off
    }
    scale <0.08, 0.08, 0.6>
    translate  <0.001621, 0.498696, 0.0>
  }
  torus { // Torus35
    0.095, 0.025  rotate -x*90
    photons {
      collect off
    }
    rotate -90.0*y
    translate  <0.08, 1.0, 0.3>
  }
  photons {
    collect off
  }
  translate  <0.17, 0.033, 0.0>
}
#declare CSG175 = union {
  object { CSG168 }
  object { CSG169 }
  object { // CSG170 -> CSG161
    CSG161
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG171 -> CSG161
    CSG161
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  object { CSG172 }
  object { // CSG173 -> CSG164
    CSG164
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG174 -> CSG164
    CSG164
    photons {
      collect off
    }
    rotate 120.0*z
    translate  0.0*x
  }
  photons {
    collect off
  }
  translate  7.7*z
}
#declare Tighten13_Ref = object {
  Tighten
  photons {
    collect off
  }
  scale 0.8
  rotate <-90.0, -40.0, 90.0>
  translate  <1.0, 0.0, 10.5>
}
#declare CSG176 = union {
  cylinder { // Cylndr167
    <0,0,1>, <0,0,0>, 1 
    hollow
    photons {
      collect off
    }
    scale <0.5, 0.5, 10.0>
  }
  object { CSG167 }
  superellipsoid { // SuperQ15
    <0.1, 0.1>
    photons {
      collect off
    }
    scale <0.15, 0.3, 0.5>
    translate  <0.652004, 0.0, 10.5>
  }
  object { RotSwp32 }
  object { CSG175 }
  object { Tighten13_Ref }
  material {
    Chrome_Textur_Modif
  }
  photons {
    collect off
  }
}
#declare RotSwp33 = lathe {
  linear_spline
  6  // control points
  <0.400524, -0.500196>,
  <0.499838, -0.5>,
  <0.499696, 0.43196>,
  <0.599928, 0.431812>,
  <0.599998, 0.5>,
  <0.418727, 0.500175>
  rotate <90,0,90>
  material {
    Plastic_1
  }
  photons {
    collect off
  }
  translate  10.57*z
}
#declare Low3 = union {
  object { CSG157 }
  object { // CSG158 -> CSG157
    CSG157
    photons {
      collect off
    }
    rotate -120.0*z
  }
  object { // CSG159 -> CSG157
    CSG157
    photons {
      collect off
    }
    rotate 120.0*z
  }
  object { RotSwp29 }
  object { // RotSwp30 -> RotSwp29
    RotSwp29
    photons {
      collect off
    }
    rotate <-0.0, 0.0, -120.0>
    translate  <-0.0, 0.0, 0.0>
  }
  object { // RotSwp31 -> RotSwp29
    RotSwp29
    photons {
      collect off
    }
    rotate <-0.0, 0.0, 120.0>
    translate  <0.0, 0.0, 0.0>
  }
  object { CSG176 }
  object { RotSwp33 }
  photons {
    collect off
  }
}
#declare Sit = union {
  object { Top2 }
  object { Low3 }
  photons {
    collect off
  }
  translate  <7.0, 43.0, -9.25>
}
union { // DrumSet
  object { BassDrum }
  object { FloorTom }
  object { ZymbStand }
  object { HiHat }
  object { SnareStand }
  object { Sit }
  photons {
    collect off
  }
}


